{"version":3,"sources":["angular:jit:template:src\\app\\pages\\reportes\\reportes.html","angular:jit:style:src\\app\\pages\\reportes\\reportes.css","src/app/pages/reportes/reportes.service.ts","node_modules/chart.js/auto/auto.js","src/app/pages/reportes/reportes.ts","src/app/pages/reportes/reportes.spec.ts"],"sourcesContent":["<div class=\"d-flex vh-100 overflow-hidden\">\r\n  <aside class=\"sidebar text-white flex-shrink-0 p-3\" style=\"width:240px\">\r\n    <div class=\"d-flex align-items-center mb-4\">\r\n      <i class=\"bi bi-leaf-fill fs-4 me-2\"></i>\r\n      <span class=\"h5 mb-0\">EcoConstruct</span>\r\n    </div>\r\n\r\n    <nav class=\"nav flex-column\">\r\n      <small class=\"text-uppercase text-white-50 mb-2\">Principal</small>\r\n\r\n      <a routerLink=\"/dashboard\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\" class=\"nav-link text-white\">\r\n        <i class=\"bi bi-speedometer2 me-2\"></i> Dashboard\r\n      </a>\r\n\r\n      <a routerLink=\"/gestion-obras\" routerLinkActive=\"active\" class=\"nav-link text-white\">\r\n        <i class=\"bi bi-building me-2\"></i> Gestión de Obras\r\n      </a>\r\n\r\n      <a routerLink=\"/registro-residuos\" routerLinkActive=\"active\" class=\"nav-link text-white\">\r\n        <i class=\"bi bi-card-checklist me-2\"></i> Registro de Residuos\r\n      </a>\r\n\r\n      <a routerLink=\"/transporte\" routerLinkActive=\"active\" class=\"nav-link text-white\">\r\n        <i class=\"bi bi-truck me-2\"></i> Transporte\r\n      </a>\r\n\r\n      <a routerLink=\"/inventario\" routerLinkActive=\"active\" class=\"nav-link text-white\">\r\n        <i class=\"bi bi-box-seam me-2\"></i> Inventario\r\n      </a>\r\n\r\n      <a routerLink=\"/historial-trazabilidad\" routerLinkActive=\"active\" class=\"nav-link text-white\">\r\n        <i class=\"bi bi-clock-history me-2\"></i> Historial y Trazabilidad\r\n      </a>\r\n\r\n      <a routerLink=\"/reportes\" routerLinkActive=\"active\" class=\"nav-link text-white\">\r\n        <i class=\"bi bi-bar-chart me-2\"></i> Reportes\r\n      </a>\r\n\r\n      <hr class=\"border-light\">\r\n\r\n      <small class=\"text-uppercase text-white-50 mb-2\">Sistema</small>\r\n\r\n      <a routerLink=\"/perfil\" routerLinkActive=\"active\" class=\"nav-link text-white\">\r\n        <i class=\"bi bi-person-circle me-2\"></i> Perfil\r\n      </a>\r\n\r\n      <a routerLink=\"/usuarios\" routerLinkActive=\"active\" class=\"nav-link text-white mt-2\">\r\n        <i class=\"bi bi-people me-2\"></i> Usuarios\r\n      </a>\r\n\r\n      <a href=\"#\" (click)=\"logout()\" class=\"nav-link text-white mt-2\">\r\n        <i class=\"bi bi-box-arrow-right me-2\"></i> Cerrar Sesión\r\n      </a>\r\n    </nav>\r\n  </aside>\r\n\r\n  <main class=\"flex-grow-1 overflow-auto p-4\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <div>\r\n        <h2 class=\"h3 mb-1\">Reportes y Análisis</h2>\r\n        <small class=\"text-muted\">Genera y visualiza reportes detallados sobre la gestión de residuos</small>\r\n      </div>\r\n      <button class=\"btn btn-success\">\r\n        <i class=\"bi bi-file-earmark-text me-1\"></i> Nuevo Reporte\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Cards resumen -->\r\n    <div class=\"row gx-3 gy-3 mb-4\">\r\n      <div class=\"col-12 col-md-3\" *ngFor=\"let s of stats\">\r\n        <div class=\"card h-100 shadow-sm\">\r\n          <div class=\"card-body position-relative\">\r\n            <small class=\"text-muted\">{{ s.label }}</small>\r\n            <h2 class=\"fw-bold mt-1\">{{ s.value }}</h2>\r\n            <div *ngIf=\"s.sub\" class=\"small text-success\">{{ s.sub }}</div>\r\n            <i class=\"bi {{ s.icon }} position-absolute\" style=\"top:1rem; right:1rem; color:#6b7280;\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Gráficos -->\r\n    <div class=\"row gx-4 gy-4 mb-4\">\r\n      <div class=\"col-12 col-lg-6\">\r\n        <div class=\"card shadow-sm p-3\">\r\n          <h5 class=\"card-title mb-3\">Evolución Mensual de Residuos</h5>\r\n          <canvas #lineCanvas></canvas>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-lg-6\">\r\n        <div class=\"card shadow-sm p-3\">\r\n          <h5 class=\"card-title mb-3\">Distribución por Tipo de Residuo</h5>\r\n          <canvas #pieCanvas></canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Tabla de reportes -->\r\n    <div class=\"card shadow-sm p-3\">\r\n      <h5 class=\"mb-3\">Reportes Generados</h5>\r\n      <ul class=\"list-group list-group-flush\">\r\n        <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let r of reports\">\r\n          <div>\r\n            <div class=\"fw-bold\">{{ r.title }}</div>\r\n            <small class=\"text-muted\">{{ r.date }} · Tipo: {{ r.type }}</small>\r\n          </div>\r\n          <div class=\"d-flex align-items-center\">\r\n            <span class=\"badge\"\r\n                  [class.bg-success]=\"r.status === 'Completado'\"\r\n                  [class.bg-secondary]=\"r.status === 'En proceso'\"\r\n                  [class.bg-danger]=\"r.status === 'Fallido'\">\r\n              {{ r.status }}\r\n            </span>\r\n            <button class=\"btn btn-outline-secondary btn-sm ms-3\">\r\n              <i class=\"bi bi-download\"></i> Descargar\r\n            </button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </main>\r\n</div>\r\n","/* src/app/pages/reportes/reportes.css */\n.sidebar {\n  width: 240px;\n  background-color: #16a249;\n  color: white;\n  padding: 2rem 1rem;\n  display: flex;\n  flex-direction: column;\n}\n.logo-icon {\n  font-size: 1.5rem;\n}\n.brand {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 2rem;\n}\n.brand-name {\n  font-weight: 700;\n  font-size: 1.2rem;\n}\n.nav-section {\n  flex: 1;\n}\n.nav-section-title {\n  text-transform: uppercase;\n  font-size: 0.75rem;\n  opacity: 0.7;\n  margin: 1rem 0 0.5rem;\n}\n.nav-link {\n  color: white;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.25rem 0;\n  text-decoration: none;\n  transition: opacity .2s;\n}\n.nav-link.active,\n.nav-link:hover {\n  opacity: 0.8;\n}\n.obra-card {\n  border-radius: .75rem;\n}\n.obra-card h5 {\n  font-weight: 600;\n}\n.obra-card .badge {\n  font-size: .75rem;\n  text-transform: none;\n  padding: .4em .8em;\n}\n.progress {\n  background-color: #e9ecef;\n}\n.progress-bar {\n  transition: width .6s ease;\n}\n.card-title {\n  font-size: 1rem;\n  font-weight: 600;\n}\ncanvas {\n  width: 100% !important;\n  height: 300px !important;\n}\n.list-group-item {\n  border: none;\n  border-bottom: 1px solid #e9ecef;\n}\n.list-group-item:last-child {\n  border-bottom: none;\n}\n/*# sourceMappingURL=reportes.css.map */\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, forkJoin, map } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { ReportStats, MonthlyReport, TipoResiduoDistribucion } from './report.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ReportesService {\r\n  private invUrl = `${environment.apiUrl}/inventories`;\r\n  private wsUrl = `${environment.apiUrl}/worksites`;\r\n  private carUrl = `${environment.apiUrl}/carriers`;\r\n  private itemUrl = `${environment.apiUrl}/items`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getResumenStats(): Observable<ReportStats> {\r\n    return forkJoin({\r\n      inventarios: this.http.get<any[]>(this.invUrl),\r\n      obras: this.http.get<any[]>(this.wsUrl),\r\n    }).pipe(\r\n      map(({ inventarios, obras }) => {\r\n        const totalGenerado = inventarios.reduce((sum, inv) => sum + (inv.totalGenerado || 0), 0);\r\n        const reciclado = inventarios.reduce((sum, inv) => sum + (inv.totalReciclado || 0), 0);\r\n        const eficienciaGlobal = totalGenerado ? (reciclado / totalGenerado) * 100 : 0;\r\n        const obrasActivas = obras.length;\r\n\r\n        return {\r\n          totalGenerado,\r\n          reciclado,\r\n          eficienciaGlobal: parseFloat(eficienciaGlobal.toFixed(2)),\r\n          obrasActivas\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  getDistribucionTipos(): Observable<TipoResiduoDistribucion[]> {\r\n    return this.http.get<any[]>(this.itemUrl).pipe(\r\n      map(items => {\r\n        const agrupados: { [tipo: string]: number } = {};\r\n        items.forEach(item => {\r\n          agrupados[item.tipoResiduo] = (agrupados[item.tipoResiduo] || 0) + item.cantidad;\r\n        });\r\n        return Object.entries(agrupados).map(([tipo, cantidad]) => ({ tipo, cantidad }));\r\n      })\r\n    );\r\n  }\r\n\r\n  getDatosMensuales(): Observable<MonthlyReport[]> {\r\n    return this.http.get<any[]>(this.invUrl).pipe(\r\n      map(inventarios => {\r\n        const mensual = new Map<string, MonthlyReport>();\r\n\r\n        inventarios.forEach(inv => {\r\n          const fecha = new Date(inv.fechaRegistro);\r\n          const mes = fecha.toLocaleString('default', { month: 'short' });\r\n\r\n          const generado = inv.totalGenerado || 0;\r\n          const reciclado = inv.totalReciclado || 0;\r\n          const tratado = inv.totalTratado || 0;\r\n\r\n          if (!mensual.has(mes)) {\r\n            mensual.set(mes, { mes, generado: 0, reciclado: 0, tratado: 0 });\r\n          }\r\n\r\n          const entry = mensual.get(mes)!;\r\n          entry.generado += generado;\r\n          entry.reciclado += reciclado;\r\n          entry.tratado += tratado;\r\n        });\r\n\r\n        return Array.from(mensual.values());\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReportesService } from './reportes.service';\r\nimport type { ChartConfiguration, ChartTypeRegistry } from 'chart.js';\r\nimport Chart from 'chart.js/auto';\r\n\r\ninterface StatCard {\r\n  label: string;\r\n  value: string;\r\n  sub?: string;\r\n  icon: string;\r\n}\r\n\r\ninterface MonthlyData {\r\n  mes: string;\r\n  generado: number;\r\n  reciclado: number;\r\n  tratado: number;\r\n}\r\n\r\ninterface ReportEntry {\r\n  title: string;\r\n  date: string;\r\n  type: string;\r\n  status: 'Completado' | 'En proceso' | 'Fallido';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-reportes',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule, FormsModule],\r\n  templateUrl: './reportes.html',\r\n  styleUrls: ['./reportes.css']\r\n})\r\nexport class ReportesComponent implements OnInit, AfterViewInit {\r\n\r\n  stats: StatCard[] = [];\r\n  monthly: MonthlyData[] = [];\r\n  reports: ReportEntry[] = [];\r\n  distribution: { label: string; value: number }[] = [];\r\n\r\n  @ViewChild('lineCanvas') lineCanvas!: ElementRef<HTMLCanvasElement>;\r\n  @ViewChild('pieCanvas') pieCanvas!: ElementRef<HTMLCanvasElement>;\r\n\r\n  private lineChart?: Chart;\r\n  private pieChart?: Chart;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private reportesService: ReportesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.reportesService.getResumenStats().subscribe(stats => {\r\n      this.stats = [\r\n        {\r\n          label: 'Total Generado',\r\n          value: `${stats.totalGenerado} m³`,\r\n          sub: '',\r\n          icon: 'bi-box-seam'\r\n        },\r\n        {\r\n          label: 'Reciclado',\r\n          value: `${stats.reciclado} m³`,\r\n          sub: stats.totalGenerado > 0\r\n            ? `${((stats.reciclado / stats.totalGenerado) * 100).toFixed(1)}% del total`\r\n            : '0% del total',\r\n          icon: 'bi-arrow-repeat'\r\n        },\r\n        {\r\n          label: 'Eficiencia Global',\r\n          value: `${stats.eficienciaGlobal}%`,\r\n          sub: '',\r\n          icon: 'bi-graph-up'\r\n        },\r\n        {\r\n          label: 'Obras Monitoreadas',\r\n          value: `${stats.obrasActivas}`,\r\n          sub: 'Activas este mes',\r\n          icon: 'bi-building'\r\n        }\r\n      ];\r\n    });\r\n\r\n    this.reportesService.getDistribucionTipos().subscribe(data => {\r\n      this.distribution = data.map(d => ({ label: d.tipo, value: d.cantidad }));\r\n      this.renderPieChart();\r\n    });\r\n\r\n    this.reportesService.getDatosMensuales().subscribe(data => {\r\n      this.monthly = data;\r\n      this.renderLineChart();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.renderLineChart();\r\n    this.renderPieChart();\r\n  }\r\n\r\n  renderLineChart() {\r\n    if (!this.lineCanvas?.nativeElement) return;\r\n\r\n    const ctx = this.lineCanvas.nativeElement.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    if (this.lineChart) {\r\n      this.lineChart.destroy();\r\n    }\r\n\r\n    this.lineChart = new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels: this.monthly.map(m => m.mes),\r\n        datasets: [\r\n          {\r\n            label: 'Generado',\r\n            data: this.monthly.map(m => m.generado),\r\n            fill: false,\r\n            borderColor: '#4CAF50'\r\n          },\r\n          {\r\n            label: 'Reciclado',\r\n            data: this.monthly.map(m => m.reciclado),\r\n            fill: false,\r\n            borderColor: '#2196F3'\r\n          },\r\n          {\r\n            label: 'Tratado',\r\n            data: this.monthly.map(m => m.tratado),\r\n            fill: false,\r\n            borderColor: '#FFC107'\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: { position: 'bottom' }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\nrenderPieChart(): void {\r\n  if (!this.pieCanvas?.nativeElement) return;\r\n\r\n  const ctx = this.pieCanvas.nativeElement.getContext('2d');\r\n  if (!ctx) return;\r\n\r\n  if (this.pieChart) {\r\n    this.pieChart.destroy();\r\n  }\r\n\r\n  const config: ChartConfiguration<'pie', number[], string> = {\r\n    type: 'pie',\r\n    data: {\r\n      labels: this.distribution.map(d => d.label),\r\n      datasets: [\r\n        {\r\n          data: this.distribution.map(d => d.value),\r\n          backgroundColor: ['#4CAF50', '#2196F3', '#FFC107', '#FF5722']\r\n        }\r\n      ]\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: { position: 'bottom' }\r\n      }\r\n    }\r\n  };\r\n\r\n  this.pieChart = new Chart<'pie', number[], string>(ctx, config);\r\n}\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { ComponentFixture, TestBed, fakeAsync, tick } from '@angular/core/testing';\r\nimport { ReportesComponent } from './reportes';\r\nimport { ReportesService } from './reportes.service';\r\nimport { Router } from '@angular/router';\r\nimport { of } from 'rxjs';\r\n\r\ndescribe('ReportesComponent', () => {\r\n  let component: ReportesComponent;\r\n  let fixture: ComponentFixture<ReportesComponent>;\r\n  let mockService: jasmine.SpyObj<ReportesService>;\r\n  let mockRouter: jasmine.SpyObj<Router>;\r\n\r\n  beforeEach(async () => {\r\n    mockService = jasmine.createSpyObj('ReportesService', [\r\n      'getResumenStats',\r\n      'getDistribucionTipos',\r\n      'getDatosMensuales'\r\n    ]);\r\n    mockRouter = jasmine.createSpyObj('Router', ['navigate']);\r\n\r\n    await TestBed.configureTestingModule({\r\n      imports: [ReportesComponent],\r\n      providers: [\r\n        { provide: ReportesService, useValue: mockService },\r\n        { provide: Router, useValue: mockRouter }\r\n      ]\r\n    }).compileComponents();\r\n\r\n    fixture = TestBed.createComponent(ReportesComponent);\r\n    component = fixture.componentInstance;\r\n  });\r\n\r\n  it('debería crearse correctamente', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('debería cargar y procesar datos en ngOnInit', fakeAsync(() => {\r\n    mockService.getResumenStats.and.returnValue(of({\r\n      totalGenerado: 100,\r\n      reciclado: 40,\r\n      eficienciaGlobal: 85,\r\n      obrasActivas: 3\r\n    }));\r\n    mockService.getDistribucionTipos.and.returnValue(of([\r\n      { tipo: 'Metal', cantidad: 20 },\r\n      { tipo: 'Plástico', cantidad: 10 }\r\n    ]));\r\n    mockService.getDatosMensuales.and.returnValue(of([\r\n      { mes: 'Enero', generado: 50, reciclado: 20, tratado: 10 },\r\n      { mes: 'Febrero', generado: 50, reciclado: 20, tratado: 10 }\r\n    ]));\r\n\r\n    fixture.detectChanges();\r\n    tick();\r\n\r\n    expect(component.stats.length).toBe(4);\r\n    expect(component.distribution.length).toBe(2);\r\n    expect(component.monthly.length).toBe(2);\r\n  }));\r\n\r\n  it('debería ejecutar logout correctamente', () => {\r\n    spyOn(localStorage, 'clear');\r\n    spyOn(sessionStorage, 'clear');\r\n\r\n    component.logout();\r\n\r\n    expect(localStorage.clear).toHaveBeenCalled();\r\n    expect(sessionStorage.clear).toHaveBeenCalled();\r\n    expect(mockRouter.navigate).toHaveBeenCalledWith(['/login']);\r\n  });\r\n});\r\n"],"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","names":["reportes_default","init_reportes","ReportesService","ReportesComponent","init_reportes"],"x_google_ignoreList":[3]}