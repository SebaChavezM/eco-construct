{"version":3,"sources":["angular:jit:template:src\\app\\pages\\transporte\\transporte.html","angular:jit:style:src\\app\\pages\\transporte\\transporte.css","node_modules/@angular/animations/fesm2022/private_export.mjs","node_modules/@angular/animations/fesm2022/animations.mjs","node_modules/ngx-toastr/fesm2022/ngx-toastr.mjs","src/app/pages/transporte/transporte.service.ts","src/app/pages/transporte/transporte.ts","src/app/pages/transporte/transportes.spec.ts"],"sourcesContent":["<div class=\"d-flex vh-100 overflow-hidden\">\r\n\r\n<aside class=\"sidebar text-white flex-shrink-0 p-3\" style=\"width:240px\">\r\n  <div class=\"d-flex align-items-center mb-4\">\r\n    <i class=\"bi bi-leaf-fill fs-4 me-2\"></i>\r\n    <span class=\"h5 mb-0\">EcoConstruct</span>\r\n  </div>\r\n\r\n  <nav class=\"nav flex-column\">\r\n\r\n    <small class=\"text-uppercase text-white-50 mb-2\">Principal</small>\r\n\r\n    <a\r\n      routerLink=\"/dashboard\"\r\n      routerLinkActive=\"active\"\r\n      [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-speedometer2 me-2\"></i>\r\n      Dashboard\r\n    </a>\r\n\r\n    <a\r\n      routerLink=\"/gestion-obras\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-building me-2\"></i>\r\n      Gestión de Obras\r\n    </a>\r\n\r\n    <a\r\n      routerLink=\"/registro-residuos\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-card-checklist me-2\"></i>\r\n      Registro de Residuos\r\n    </a>\r\n\r\n    <a\r\n      routerLink=\"/transporte\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-truck me-2\"></i>\r\n      Transporte\r\n    </a>\r\n\r\n    <a\r\n      routerLink=\"/inventario\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-box-seam me-2\"></i>\r\n      Inventario\r\n    </a>\r\n\r\n    <a\r\n      routerLink=\"/historial-trazabilidad\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-clock-history me-2\"></i>\r\n      Historial y Trazabilidad\r\n    </a>\r\n\r\n    <a\r\n      routerLink=\"/reportes\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-bar-chart me-2\"></i>\r\n      Reportes\r\n    </a>\r\n\r\n    <hr class=\"border-light\">\r\n\r\n    <small class=\"text-uppercase text-white-50 mb-2\">Sistema</small>\r\n    <a\r\n      routerLink=\"/perfil\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-person-circle me-2\"></i>\r\n      Perfil\r\n    </a>\r\n          <a routerLink=\"/usuarios\"\r\n         routerLinkActive=\"active\"\r\n         class=\"nav-link text-white mt-2\">\r\n        <i class=\"bi bi-people me-2\"></i>Usuarios\r\n    </a>\r\n    <a\r\n      href=\"#\"\r\n      (click)=\"logout()\"\r\n      class=\"nav-link text-white mt-2\"\r\n    >\r\n      <i class=\"bi bi-box-arrow-right me-2\"></i>\r\n      Cerrar Sesión\r\n    </a>\r\n  </nav>\r\n</aside>\r\n\r\n  <main class=\"flex-grow-1 overflow-auto p-4\">\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <div>\r\n        <h2 class=\"h3 mb-1\">Gestión de Transporte</h2>\r\n        <small class=\"text-muted\">Registra y rastrea el transporte de residuos</small>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card mb-5 shadow-sm\">\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">\r\n          <i class=\"bi bi-truck me-2\"></i>Nuevo Transporte\r\n        </h5>\r\n        <small class=\"text-muted d-block mb-4\">\r\n          Registra el transporte de residuos desde la obra hasta su destino final\r\n        </small>\r\n\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"register()\">\r\n          <div class=\"row g-3\">\r\n\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">N° de Servicio</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [value]=\"numeroServicio\"\r\n                readonly\r\n              />\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Transportista</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Nombre del transportista\"\r\n                formControlName=\"transportista\"\r\n                [class.is-invalid]=\"\r\n                  form.get('transportista')!.touched &&\r\n                  form.get('transportista')!.invalid\r\n                \"\r\n              />\r\n              <div\r\n                *ngIf=\"\r\n                  form.get('transportista')!.touched &&\r\n                  form.get('transportista')!.hasError('required')\r\n                \"\r\n                class=\"invalid-feedback\"\r\n              >\r\n                Debes ingresar un transportista\r\n              </div>\r\n            </div>\r\n            \r\n          <div class=\"col-md-6\">\r\n            <label class=\"form-label\">Residuo a Transportar</label>\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"residuoId\"\r\n              [class.is-invalid]=\"form.get('residuoId')!.touched && form.get('residuoId')!.invalid\"\r\n            >\r\n              <option value=\"\" disabled selected>Seleccione un residuo</option>\r\n              <option *ngFor=\"let r of residuos\" [value]=\"r.id\">\r\n                {{ r.name }}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"form.get('residuoId')!.touched && form.get('residuoId')!.hasError('required')\" class=\"invalid-feedback\">\r\n              Debes seleccionar un residuo\r\n            </div>\r\n          </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Lugar de Retiro</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Ubicación de retiro\"\r\n                formControlName=\"obra\"\r\n                [class.is-invalid]=\"\r\n                  form.get('obra')!.touched && form.get('obra')!.invalid\r\n                \"\r\n              />\r\n              <div\r\n                *ngIf=\"\r\n                  form.get('obra')!.touched && form.get('obra')!.hasError('required')\r\n                \"\r\n                class=\"invalid-feedback\"\r\n              >\r\n                Debes ingresar el lugar de retiro\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Conductor</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Nombre del conductor\"\r\n                formControlName=\"conductor\"\r\n                [class.is-invalid]=\"form.get('conductor')!.touched && form.get('conductor')!.invalid\"\r\n              />\r\n              <div\r\n                *ngIf=\"form.get('conductor')!.touched\"\r\n                class=\"invalid-feedback\"\r\n              >\r\n                <span *ngIf=\"form.get('conductor')!.hasError('required')\">\r\n                  Debes ingresar el nombre del conductor\r\n                </span>\r\n                <span *ngIf=\"form.get('conductor')!.hasError('minlength')\">\r\n                  Mínimo 3 caracteres\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Patente del Vehículo</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"ABC-1234\"\r\n                formControlName=\"patente\"\r\n                [class.is-invalid]=\"form.get('patente')!.touched && form.get('patente')!.invalid\"\r\n              />\r\n              <div\r\n                *ngIf=\"form.get('patente')!.touched\"\r\n                class=\"invalid-feedback\"\r\n              >\r\n                <span *ngIf=\"form.get('patente')!.hasError('required')\">\r\n                  Debes ingresar la patente\r\n                </span>\r\n                <span *ngIf=\"form.get('patente')!.hasError('pattern')\">\r\n                  Formato inválido (letras, dígitos y guiones)\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Fecha y Hora de Salida</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                class=\"form-control\"\r\n                formControlName=\"fechaSalida\"\r\n                [class.is-invalid]=\"form.get('fechaSalida')!.touched && form.get('fechaSalida')!.invalid\"\r\n              />\r\n              <div\r\n                *ngIf=\"form.get('fechaSalida')!.touched && form.get('fechaSalida')!.hasError('required')\"\r\n                class=\"invalid-feedback\"\r\n              >\r\n                Debes seleccionar la fecha de salida\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Fecha y Hora Estimada de Llegada</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                class=\"form-control\"\r\n                formControlName=\"fechaLlegada\"\r\n                [class.is-invalid]=\"form.get('fechaLlegada')!.touched && form.get('fechaLlegada')!.invalid\"\r\n              />\r\n              <div\r\n                *ngIf=\"form.get('fechaLlegada')!.touched && form.get('fechaLlegada')!.hasError('required')\"\r\n                class=\"invalid-feedback\"\r\n              >\r\n                Debes seleccionar la fecha de llegada\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Número de Guía</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Ingresa número de guía\"\r\n                formControlName=\"guia\"\r\n                [class.is-invalid]=\"form.get('guia')!.touched && form.get('guia')!.invalid\"\r\n              />\r\n              <div\r\n                *ngIf=\"form.get('guia')!.touched && form.get('guia')!.hasError('required')\"\r\n                class=\"invalid-feedback\"\r\n              >\r\n                Debes ingresar el número de guía\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-12 text-end mt-3\">\r\n              <button\r\n                type=\"submit\"\r\n                class=\"btn btn-success me-2\"\r\n                [disabled]=\"form.invalid\"\r\n              >\r\n                <i class=\"bi bi-plus-lg me-1\"></i>Registrar Transporte\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"form.reset()\">\r\n                Cancelar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"transportes-en-curso p-4\">\r\n    <h5 class=\"heading mb-1\">Transportes en Curso</h5>\r\n    <p class=\"subheading text-muted mb-4\">Estado actual de los transportes registrados</p>\r\n\r\n    <div *ngFor=\"let t of enCurso\" class=\"card transporte-card mb-4\">\r\n      <div class=\"card-header d-flex justify-content-between align-items-center bg-white\">\r\n        <strong class=\"transporte-title\">{{ t.residuo }} – {{ t.patente }}</strong>\r\n        <span class=\"badge status-badge\">{{ t.estadoTexto }}</span>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"row info-row align-items-center mb-3\">\r\n          <div class=\"col info-item d-flex align-items-center\">\r\n            <i class=\"bi bi-geo-alt-fill me-2 fs-5 text-success\"></i>\r\n            <div>\r\n              <small class=\"label text-uppercase text-secondary\">Destino</small><br>\r\n              <span class=\"info-text\">{{ t.destino }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col info-item d-flex align-items-center\">\r\n            <i class=\"bi bi-truck-front-fill me-2 fs-5 text-success\"></i>\r\n            <div>\r\n              <small class=\"label text-uppercase text-secondary\">Transportista</small><br>\r\n              <span class=\"info-text\">{{ t.transportista }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col info-item d-flex align-items-center\">\r\n            <i class=\"bi bi-person-fill me-2 fs-5 text-success\"></i>\r\n            <div>\r\n              <small class=\"label text-uppercase text-secondary\">Conductor</small><br>\r\n              <span class=\"info-text\">{{ t.conductor }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-auto info-item text-center\">\r\n            <i class=\"bi bi-clock me-1 fs-5 text-success\"></i><br>\r\n            <small class=\"label text-uppercase text-secondary\">Salida</small><br>\r\n            <span class=\"info-text\">{{ t.fechaSalida | date:'HH:mm' }}</span>\r\n          </div>\r\n          <div class=\"col-auto info-item text-center\">\r\n            <i class=\"bi bi-clock-history me-1 fs-5 text-success\"></i><br>\r\n            <small class=\"label text-uppercase text-secondary\">Llegada</small><br>\r\n            <span class=\"info-text\">{{ t.fechaLlegada | date:'HH:mm' }}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"actions text-end mt-2\">\r\n          <button class=\"btn btn-success\" (click)=\"openDetalle(t)\">\r\n            Ver Detalle\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    class=\"modal fade\"\r\n    [class.show]=\"showDetalleModal\"\r\n    [style.display]=\"showDetalleModal ? 'block' : 'none'\"\r\n    tabindex=\"-1\"\r\n    role=\"dialog\"\r\n  >\r\n    <div class=\"modal-dialog modal-lg modal-dialog-scrollable\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n\r\n        <!-- Cabecera -->\r\n        <div class=\"modal-header border-0\">\r\n          <h5 class=\"modal-title\">\r\n            <i class=\"bi bi-truck-front-fill me-2 text-success fs-4\"></i>\r\n            Servicio N°{{ selectedTransport?.id }}\r\n          </h5>\r\n          <button type=\"button\" class=\"btn-close\" (click)=\"closeDetalle()\"></button>\r\n        </div>\r\n\r\n        <!-- Estado Actual -->\r\n        <div class=\"estado-container px-4 mb-2 d-flex justify-content-between align-items-center\">\r\n          <h6 class=\"fw-semibold mb-0\">Estado Actual</h6>\r\n          <span class=\"badge status-badge\">{{ selectedTransport?.estadoTexto }}</span>\r\n        </div>\r\n        <hr class=\"mx-4 my-2\">\r\n\r\n        <!-- CUERPO: MODO VISTA -->\r\n        <div *ngIf=\"!editMode\" class=\"modal-body px-4 pb-4\">\r\n\r\n          <h6 class=\"fw-semibold mb-2\">Información del Residuo</h6>\r\n          <strong>\r\n            {{\r\n              getResiduoNombrePorId(selectedTransport?.items?.[0]?.item?.id || 0)\r\n            }} – {{ selectedTransport?.items?.[0]?.quantity || 0 }} m³\r\n          </strong>\r\n          <hr>\r\n\r\n          <h6 class=\"fw-semibold mb-2\">Ruta de Transporte</h6>\r\n          <p class=\"mb-1\">\r\n            <i class=\"bi bi-geo-alt-fill text-success me-1 fs-5\"></i>\r\n            <strong>Origen:</strong> {{ selectedTransport?.origen }}\r\n          </p>\r\n          <p class=\"mb-0\">\r\n            <i class=\"bi bi-geo-alt text-danger me-1 fs-5\"></i>\r\n            <strong>Destino:</strong> {{ selectedTransport?.destino }}\r\n          </p>\r\n          <hr>\r\n\r\n          <h6 class=\"fw-semibold mb-2\">Información del Vehículo</h6>\r\n          <div class=\"row g-3 mb-3\">\r\n            <div class=\"col-md-6\">\r\n              <p class=\"mb-0\">\r\n                <i class=\"bi bi-person-fill text-success me-1 fs-5\"></i>\r\n                <strong>Transportista:</strong> {{ selectedTransport?.transportista }}\r\n              </p>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <p class=\"mb-0\">\r\n                <i class=\"bi bi-person-fill text-success me-1 fs-5\"></i>\r\n                <strong>Conductor:</strong> {{ selectedTransport?.conductor }}\r\n              </p>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <p class=\"mb-0\">\r\n                <i class=\"bi bi-card-text text-success me-1 fs-5\"></i>\r\n                <strong>Patente:</strong> {{ selectedTransport?.patente }}\r\n              </p>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <p class=\"mb-0\">\r\n                <i class=\"bi bi-hash text-success me-1 fs-5\"></i>\r\n                <strong>Guía:</strong> {{ selectedTransport?.guia }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <hr>\r\n\r\n          <h6 class=\"fw-semibold mb-2\">Horarios</h6>\r\n          <div class=\"row g-3\">\r\n            <div class=\"col-md-6\">\r\n              <p class=\"mb-0\">\r\n                <i class=\"bi bi-clock text-success me-1 fs-5\"></i>\r\n                <strong>Hora de Salida:</strong>\r\n                {{ selectedTransport?.fechaSalida | date:'HH:mm' }}\r\n              </p>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <p class=\"mb-0\">\r\n                <i class=\"bi bi-clock-history text-success me-1 fs-5\"></i>\r\n                <strong>ETA:</strong>\r\n                {{ selectedTransport?.fechaLlegada | date:'HH:mm' }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <!-- CUERPO: MODO EDICIÓN -->\r\n        <form *ngIf=\"editMode\" [formGroup]=\"form\" class=\"modal-body px-4 pb-4\">\r\n\r\n          <div class=\"row g-3\">\r\n            <!-- Transportista -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Transportista</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"transportista\">\r\n            </div>\r\n            <!-- Residuo -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Residuo</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"residuo\">\r\n            </div>\r\n            <!-- Obra / Destino -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Destino</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"obra\">\r\n            </div>\r\n            <!-- Conductor -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Conductor</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"conductor\">\r\n            </div>\r\n            <!-- Patente -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Patente</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"patente\">\r\n            </div>\r\n            <!-- Guía -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Guía</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"guia\">\r\n            </div>\r\n            <!-- Fecha Salida -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Fecha Salida</label>\r\n              <input type=\"datetime-local\" class=\"form-control\" formControlName=\"fechaSalida\">\r\n            </div>\r\n            <!-- Fecha Llegada -->\r\n            <div class=\"col-md-6\">\r\n              <label class=\"form-label\">Fecha Llegada</label>\r\n              <input type=\"datetime-local\" class=\"form-control\" formControlName=\"fechaLlegada\">\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n\r\n        <!-- Pie de modal -->\r\n        <div class=\"modal-footer border-0 px-4 pb-3\">\r\n          <!-- Botón Editar (solo vista) -->\r\n          <button\r\n            *ngIf=\"!editMode\"\r\n            type=\"button\"\r\n            class=\"btn btn-warning\"\r\n            (click)=\"onEdit()\"\r\n          >\r\n            Editar\r\n          </button>\r\n\r\n          <!-- Botón Guardar (solo edición) -->\r\n          <button\r\n            *ngIf=\"editMode\"\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            [disabled]=\"form.invalid\"\r\n            (click)=\"onSave()\"\r\n          >\r\n            Guardar\r\n          </button>\r\n\r\n          <!-- Siempre: Cerrar -->\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-secondary\"\r\n            (click)=\"closeDetalle()\"\r\n          >\r\n            Cerrar\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n","/* src/app/pages/transporte/transporte.css */\n.sidebar {\n  width: 240px;\n  background-color: #16a249;\n  color: white;\n  padding: 2rem 1rem;\n  display: flex;\n  flex-direction: column;\n}\n.logo-icon {\n  font-size: 1.5rem;\n}\n.brand {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 2rem;\n}\n.brand-name {\n  font-weight: 700;\n  font-size: 1.2rem;\n}\n.nav-section {\n  flex: 1;\n}\n.nav-section-title {\n  text-transform: uppercase;\n  font-size: 0.75rem;\n  opacity: 0.7;\n  margin: 1rem 0 0.5rem;\n}\n.nav-link {\n  color: white;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.25rem 0;\n  text-decoration: none;\n  transition: opacity .2s;\n}\n.nav-link:hover,\n.nav-link.active {\n  opacity: 0.8;\n}\n.nav-link.active {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.obra-card {\n  border-radius: .75rem;\n}\n.obra-card h5 {\n  font-weight: 600;\n}\n.obra-card .badge {\n  font-size: .75rem;\n  text-transform: none;\n  padding: .4em .8em;\n}\n.progress {\n  background-color: #e9ecef;\n}\n.progress-bar {\n  transition: width .6s ease;\n}\n.snack-success {\n  background-color: #4caf50 !important;\n  color: white;\n}\n.snack-error {\n  background-color: #f44336 !important;\n  color: white;\n}\n.card-title i {\n  color: #1fa63b;\n}\n.transportes-en-curso {\n  margin: 2rem auto;\n  padding: 0 1rem;\n  background-color: #f8f9fa;\n  border-radius: 0.75rem;\n}\n.transportes-en-curso .heading {\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: 0.25rem;\n}\n.transportes-en-curso .subheading {\n  color: #6c757d;\n  margin-bottom: 1.5rem;\n  font-size: 0.9rem;\n}\n.transporte-card {\n  border: 1px solid #e5e7eb;\n  border-radius: 0.75rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n}\n.transporte-card .card-header {\n  background: #fff;\n  border-bottom: none;\n  padding: 1rem 1.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.transporte-title {\n  font-size: 1.125rem;\n  color: #212529;\n}\n.status-badge {\n  background: #28a745;\n  color: #fff;\n  padding: 0.35em 0.75em;\n  border-radius: 1rem;\n  font-size: 0.8rem;\n  text-transform: none;\n}\n.transporte-card .card-body {\n  padding: 1rem 1.5rem 1.5rem;\n}\n.info-row {\n  display: flex;\n  flex-wrap: wrap;\n  margin: -0.5rem;\n}\n.info-item {\n  flex: 1 1 200px;\n  display: flex;\n  align-items: flex-start;\n  padding: 0.5rem;\n}\n.info-item i {\n  font-size: 1.2rem;\n  color: #0d6efd;\n  margin-right: 0.5rem;\n}\n.info-item .label {\n  color: #6c757d;\n  font-size: 0.85rem;\n  text-transform: uppercase;\n}\n.info-item .info-text {\n  font-size: 0.95rem;\n  color: #212529;\n  display: block;\n  margin-top: 0.1rem;\n}\n.actions {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 1rem;\n}\n.actions .btn {\n  border-radius: 0.5rem;\n  font-size: 0.875rem;\n  min-width: 100px;\n}\n.transporte-card .card-body {\n  padding: 0.75rem 1rem 1rem;\n}\n.info-row {\n  margin: -0.25rem;\n}\n.info-item {\n  padding: 0.25rem;\n}\n.info-item + .info-item {\n  margin-left: 7rem;\n}\n.info-item i {\n  color: #28a745 !important;\n  margin-right: 0.4rem;\n}\n.col-auto.info-item {\n  flex: 0 0 auto;\n  width: auto;\n}\n.modal-header {\n  padding-bottom: 0.5rem;\n}\n.modal-header .modal-title {\n  font-weight: 600;\n}\n.modal-header .modal-title i {\n  color: #28a745;\n}\n.modal-body h6 {\n  font-size: 1rem;\n  font-weight: 600;\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n}\n.modal-body p {\n  margin-bottom: 0.25rem;\n}\n.modal-body hr {\n  margin: 0.75rem 0;\n  border-color: #e9ecef;\n}\n.bi.text-success {\n  color: #28a745 !important;\n}\n.status-badge {\n  background: #28a745;\n  color: #fff;\n  padding: 0.35em 0.75em;\n  border-radius: 1rem;\n  font-size: 0.8rem;\n  margin-bottom: 1rem;\n  display: inline-block;\n}\n.modal-footer {\n  padding-top: 0.5rem;\n  padding-bottom: 0;\n}\n.modal-footer .btn-success {\n  min-width: 100px;\n}\n/*# sourceMappingURL=transporte.css.map */\n","/**\n * @license Angular v20.1.0\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @description Constants for the categories of parameters that can be defined for animations.\n *\n * A corresponding function defines a set of parameters for each category, and\n * collects them into a corresponding `AnimationMetadata` object.\n *\n * @publicApi\n */\nvar AnimationMetadataType;\n(function (AnimationMetadataType) {\n    /**\n     * Associates a named animation state with a set of CSS styles.\n     * See [`state()`](api/animations/state)\n     */\n    AnimationMetadataType[AnimationMetadataType[\"State\"] = 0] = \"State\";\n    /**\n     * Data for a transition from one animation state to another.\n     * See `transition()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Transition\"] = 1] = \"Transition\";\n    /**\n     * Contains a set of animation steps.\n     * See `sequence()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Sequence\"] = 2] = \"Sequence\";\n    /**\n     * Contains a set of animation steps.\n     * See `group()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Group\"] = 3] = \"Group\";\n    /**\n     * Contains an animation step.\n     * See `animate()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Animate\"] = 4] = \"Animate\";\n    /**\n     * Contains a set of animation steps.\n     * See `keyframes()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Keyframes\"] = 5] = \"Keyframes\";\n    /**\n     * Contains a set of CSS property-value pairs into a named style.\n     * See `style()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Style\"] = 6] = \"Style\";\n    /**\n     * Associates an animation with an entry trigger that can be attached to an element.\n     * See `trigger()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Trigger\"] = 7] = \"Trigger\";\n    /**\n     * Contains a re-usable animation.\n     * See `animation()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Reference\"] = 8] = \"Reference\";\n    /**\n     * Contains data to use in executing child animations returned by a query.\n     * See `animateChild()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"AnimateChild\"] = 9] = \"AnimateChild\";\n    /**\n     * Contains animation parameters for a re-usable animation.\n     * See `useAnimation()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"AnimateRef\"] = 10] = \"AnimateRef\";\n    /**\n     * Contains child-animation query data.\n     * See `query()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Query\"] = 11] = \"Query\";\n    /**\n     * Contains data for staggering an animation sequence.\n     * See `stagger()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Stagger\"] = 12] = \"Stagger\";\n})(AnimationMetadataType || (AnimationMetadataType = {}));\n/**\n * Specifies automatic styling.\n *\n * @publicApi\n */\nconst AUTO_STYLE = '*';\n/**\n * Creates a named animation trigger, containing a  list of [`state()`](api/animations/state)\n * and `transition()` entries to be evaluated when the expression\n * bound to the trigger changes.\n *\n * @param name An identifying string.\n * @param definitions  An animation definition object, containing an array of\n * [`state()`](api/animations/state) and `transition()` declarations.\n *\n * @return An object that encapsulates the trigger data.\n *\n * @usageNotes\n * Define an animation trigger in the `animations` section of `@Component` metadata.\n * In the template, reference the trigger by name and bind it to a trigger expression that\n * evaluates to a defined animation state, using the following format:\n *\n * `[@triggerName]=\"expression\"`\n *\n * Animation trigger bindings convert all values to strings, and then match the\n * previous and current values against any linked transitions.\n * Booleans can be specified as `1` or `true` and `0` or `false`.\n *\n * ### Usage Example\n *\n * The following example creates an animation trigger reference based on the provided\n * name value.\n * The provided animation value is expected to be an array consisting of state and\n * transition declarations.\n *\n * ```ts\n * @Component({\n *   selector: \"my-component\",\n *   templateUrl: \"my-component-tpl.html\",\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component makes use of the defined trigger\n * by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ### Using an inline function\n * The `transition` animation method also supports reading an inline function which can decide\n * if its associated animation should be run.\n *\n * ```ts\n * // this method is run each time the `myAnimationTrigger` trigger value changes.\n * function myInlineMatcherFn(fromState: string, toState: string, element: any, params: {[key:\n string]: any}): boolean {\n *   // notice that `element` and `params` are also available here\n *   return toState == 'yes-please-animate';\n * }\n *\n * @Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger('myAnimationTrigger', [\n *       transition(myInlineMatcherFn, [\n *         // the animation sequence code\n *       ]),\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"yes-please-animate\";\n * }\n * ```\n *\n * ### Disabling Animations\n * When true, the special animation control binding `@.disabled` binding prevents\n * all animations from rendering.\n * Place the  `@.disabled` binding on an element to disable\n * animations on the element itself, as well as any inner animation triggers\n * within the element.\n *\n * The following example shows how to use this feature:\n *\n * ```angular-ts\n * @Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [@.disabled]=\"isDisabled\">\n *       <div [@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * When `@.disabled` is true, it prevents the `@childAnimation` trigger from animating,\n * along with any inner animations.\n *\n * ### Disable animations application-wide\n * When an area of the template is set to have animations disabled,\n * **all** inner components have their animations disabled as well.\n * This means that you can disable all animations for an app\n * by placing a host binding set on `@.disabled` on the topmost Angular component.\n *\n * ```ts\n * import {Component, HostBinding} from '@angular/core';\n *\n * @Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   @HostBinding('@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### Overriding disablement of inner animations\n * Despite inner animations being disabled, a parent animation can `query()`\n * for inner elements located in disabled areas of the template and still animate\n * them if needed. This is also the case for when a sub animation is\n * queried by a parent and then later animated using `animateChild()`.\n *\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, the animation\n * trigger callbacks still fire, but for zero seconds. When the callback fires, it provides\n * an instance of an `AnimationEvent`. If animations are disabled,\n * the `.disabled` flag on the event is true.\n *\n * @publicApi\n */\nfunction trigger(name, definitions) {\n    return { type: AnimationMetadataType.Trigger, name, definitions, options: {} };\n}\n/**\n * Defines an animation step that combines styling information with timing information.\n *\n * @param timings Sets `AnimateTimings` for the parent animation.\n * A string in the format \"duration [delay] [easing]\".\n *  - Duration and delay are expressed as a number and optional time unit,\n * such as \"1s\" or \"10ms\" for one second and 10 milliseconds, respectively.\n * The default unit is milliseconds.\n *  - The easing value controls how the animation accelerates and decelerates\n * during its runtime. Value is one of  `ease`, `ease-in`, `ease-out`,\n * `ease-in-out`, or a `cubic-bezier()` function call.\n * If not supplied, no easing is applied.\n *\n * For example, the string \"1s 100ms ease-out\" specifies a duration of\n * 1000 milliseconds, and delay of 100 ms, and the \"ease-out\" easing style,\n * which decelerates near the end of the duration.\n * @param styles Sets AnimationStyles for the parent animation.\n * A function call to either `style()` or `keyframes()`\n * that returns a collection of CSS style entries to be applied to the parent animation.\n * When null, uses the styles from the destination state.\n * This is useful when describing an animation step that will complete an animation;\n * see \"Animating to the final state\" in `transitions()`.\n * @returns An object that encapsulates the animation step.\n *\n * @usageNotes\n * Call within an animation `sequence()`, {@link /api/animations/group group()}, or\n * `transition()` call to specify an animation step\n * that applies given style data to the parent animation for a given amount of time.\n *\n * ### Syntax Examples\n * **Timing examples**\n *\n * The following examples show various `timings` specifications.\n * - `animate(500)` : Duration is 500 milliseconds.\n * - `animate(\"1s\")` : Duration is 1000 milliseconds.\n * - `animate(\"100ms 0.5s\")` : Duration is 100 milliseconds, delay is 500 milliseconds.\n * - `animate(\"5s ease-in\")` : Duration is 5000 milliseconds, easing in.\n * - `animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\")` : Duration is 5000 milliseconds, delay is 10\n * milliseconds, easing according to a bezier curve.\n *\n * **Style examples**\n *\n * The following example calls `style()` to set a single CSS style.\n * ```ts\n * animate(500, style({ background: \"red\" }))\n * ```\n * The following example calls `keyframes()` to set a CSS style\n * to different values for successive keyframes.\n * ```ts\n * animate(500, keyframes(\n *  [\n *   style({ background: \"blue\" }),\n *   style({ background: \"red\" })\n *  ])\n * ```\n *\n * @publicApi\n */\nfunction animate(timings, styles = null) {\n    return { type: AnimationMetadataType.Animate, styles, timings };\n}\n/**\n * @description Defines a list of animation steps to be run in parallel.\n *\n * @param steps An array of animation step objects.\n * - When steps are defined by `style()` or `animate()`\n * function calls, each call within the group is executed instantly.\n * - To specify offset styles to be applied at a later time, define steps with\n * `keyframes()`, or use `animate()` calls with a delay value.\n * For example:\n *\n * ```ts\n * group([\n *   animate(\"1s\", style({ background: \"black\" })),\n *   animate(\"2s\", style({ color: \"white\" }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the group data.\n *\n * @usageNotes\n * Grouped animations are useful when a series of styles must be\n * animated at different starting times and closed off at different ending times.\n *\n * When called within a `sequence()` or a\n * `transition()` call, does not continue to the next\n * instruction until all of the inner animation steps have completed.\n *\n * @publicApi\n */\nfunction group(steps, options = null) {\n    return { type: AnimationMetadataType.Group, steps, options };\n}\n/**\n * Defines a list of animation steps to be run sequentially, one by one.\n *\n * @param steps An array of animation step objects.\n * - Steps defined by `style()` calls apply the styling data immediately.\n * - Steps defined by `animate()` calls apply the styling data over time\n *   as specified by the timing data.\n *\n * ```ts\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(\"1s\", style({ opacity: 1 }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the sequence data.\n *\n * @usageNotes\n * When you pass an array of steps to a\n * `transition()` call, the steps run sequentially by default.\n * Compare this to the  {@link /api/animations/group group()} call, which runs animation steps in\n *parallel.\n *\n * When a sequence is used within a  {@link /api/animations/group group()} or a `transition()` call,\n * execution continues to the next instruction only after each of the inner animation\n * steps have completed.\n *\n * @publicApi\n **/\nfunction sequence(steps, options = null) {\n    return { type: AnimationMetadataType.Sequence, steps, options };\n}\n/**\n * Declares a key/value object containing CSS properties/styles that\n * can then be used for an animation [`state`](api/animations/state), within an animation\n *`sequence`, or as styling data for calls to `animate()` and `keyframes()`.\n *\n * @param tokens A set of CSS styles or HTML styles associated with an animation state.\n * The value can be any of the following:\n * - A key-value style pair associating a CSS property with a value.\n * - An array of key-value style pairs.\n * - An asterisk (*), to use auto-styling, where styles are derived from the element\n * being animated and applied to the animation when it starts.\n *\n * Auto-styling can be used to define a state that depends on layout or other\n * environmental factors.\n *\n * @return An object that encapsulates the style data.\n *\n * @usageNotes\n * The following examples create animation styles that collect a set of\n * CSS property values:\n *\n * ```ts\n * // string values for CSS properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical pixel values\n * style({ width: 100, height: 0 })\n * ```\n *\n * The following example uses auto-styling to allow an element to animate from\n * a height of 0 up to its full height:\n *\n * ```ts\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * @publicApi\n **/\nfunction style(tokens) {\n    return { type: AnimationMetadataType.Style, styles: tokens, offset: null };\n}\n/**\n * Declares an animation state within a trigger attached to an element.\n *\n * @param name One or more names for the defined state in a comma-separated string.\n * The following reserved state names can be supplied to define a style for specific use\n * cases:\n *\n * - `void` You can associate styles with this name to be used when\n * the element is detached from the application. For example, when an `ngIf` evaluates\n * to false, the state of the associated element is void.\n *  - `*` (asterisk) Indicates the default state. You can associate styles with this name\n * to be used as the fallback when the state that is being animated is not declared\n * within the trigger.\n *\n * @param styles A set of CSS styles associated with this state, created using the\n * `style()` function.\n * This set of styles persists on the element once the state has been reached.\n * @param options Parameters that can be passed to the state when it is invoked.\n * 0 or more key-value pairs.\n * @return An object that encapsulates the new state data.\n *\n * @usageNotes\n * Use the `trigger()` function to register states to an animation trigger.\n * Use the `transition()` function to animate between states.\n * When a state is active within a component, its associated styles persist on the element,\n * even when the animation ends.\n *\n * @publicApi\n **/\nfunction state(name, styles, options) {\n    return { type: AnimationMetadataType.State, name, styles, options };\n}\n/**\n * Defines a set of animation styles, associating each style with an optional `offset` value.\n *\n * @param steps A set of animation styles with optional offset data.\n * The optional `offset` value for a style specifies a percentage of the total animation\n * time at which that style is applied.\n * @returns An object that encapsulates the keyframes data.\n *\n * @usageNotes\n * Use with the `animate()` call. Instead of applying animations\n * from the current state\n * to the destination state, keyframes describe how each style entry is applied and at what point\n * within the animation arc.\n * Compare [CSS Keyframe Animations](https://www.w3schools.com/css/css3_animations.asp).\n *\n * ### Usage\n *\n * In the following example, the offset values describe\n * when each `backgroundColor` value is applied. The color is red at the start, and changes to\n * blue when 20% of the total time has elapsed.\n *\n * ```ts\n * // the provided offset values\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * If there are no `offset` values specified in the style entries, the offsets\n * are calculated automatically.\n *\n * ```ts\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n *```\n\n * @publicApi\n */\nfunction keyframes(steps) {\n    return { type: AnimationMetadataType.Keyframes, steps };\n}\n/**\n * Declares an animation transition which is played when a certain specified condition is met.\n *\n * @param stateChangeExpr A string with a specific format or a function that specifies when the\n * animation transition should occur (see [State Change Expression](#state-change-expression)).\n *\n * @param steps One or more animation objects that represent the animation's instructions.\n *\n * @param options An options object that can be used to specify a delay for the animation or provide\n * custom parameters for it.\n *\n * @returns An object that encapsulates the transition data.\n *\n * @usageNotes\n *\n * ### State Change Expression\n *\n * The State Change Expression instructs Angular when to run the transition's animations, it can\n *either be\n *  - a string with a specific syntax\n *  - or a function that compares the previous and current state (value of the expression bound to\n *    the element's trigger) and returns `true` if the transition should occur or `false` otherwise\n *\n * The string format can be:\n *  - `fromState => toState`, which indicates that the transition's animations should occur then the\n *    expression bound to the trigger's element goes from `fromState` to `toState`\n *\n *    _Example:_\n *      ```ts\n *        transition('open => closed', animate('.5s ease-out', style({ height: 0 }) ))\n *      ```\n *\n *  - `fromState <=> toState`, which indicates that the transition's animations should occur then\n *    the expression bound to the trigger's element goes from `fromState` to `toState` or vice versa\n *\n *    _Example:_\n *      ```ts\n *        transition('enabled <=> disabled', animate('1s cubic-bezier(0.8,0.3,0,1)'))\n *      ```\n *\n *  - `:enter`/`:leave`, which indicates that the transition's animations should occur when the\n *    element enters or exists the DOM\n *\n *    _Example:_\n *      ```ts\n *        transition(':enter', [\n *          style({ opacity: 0 }),\n *          animate('500ms', style({ opacity: 1 }))\n *        ])\n *      ```\n *\n *  - `:increment`/`:decrement`, which indicates that the transition's animations should occur when\n *    the numerical expression bound to the trigger's element has increased in value or decreased\n *\n *    _Example:_\n *      ```ts\n *        transition(':increment', query('@counter', animateChild()))\n *      ```\n *\n *  - a sequence of any of the above divided by commas, which indicates that transition's animations\n *    should occur whenever one of the state change expressions matches\n *\n *    _Example:_\n *      ```ts\n *        transition(':increment, * => enabled, :enter', animate('1s ease', keyframes([\n *          style({ transform: 'scale(1)', offset: 0}),\n *          style({ transform: 'scale(1.1)', offset: 0.7}),\n *          style({ transform: 'scale(1)', offset: 1})\n *        ]))),\n *      ```\n *\n * Also note that in such context:\n *  - `void` can be used to indicate the absence of the element\n *  - asterisks can be used as wildcards that match any state\n *  - (as a consequence of the above, `void => *` is equivalent to `:enter` and `* => void` is\n *    equivalent to `:leave`)\n *  - `true` and `false` also match expression values of `1` and `0` respectively (but do not match\n *    _truthy_ and _falsy_ values)\n *\n * <div class=\"docs-alert docs-alert-helpful\">\n *\n *  Be careful about entering end leaving elements as their transitions present a common\n *  pitfall for developers.\n *\n *  Note that when an element with a trigger enters the DOM its `:enter` transition always\n *  gets executed, but its `:leave` transition will not be executed if the element is removed\n *  alongside its parent (as it will be removed \"without warning\" before its transition has\n *  a chance to be executed, the only way that such transition can occur is if the element\n *  is exiting the DOM on its own).\n *\n *\n * </div>\n *\n * ### Animating to a Final State\n *\n * If the final step in a transition is a call to `animate()` that uses a timing value\n * with no `style` data, that step is automatically considered the final animation arc,\n * for the element to reach the final state, in such case Angular automatically adds or removes\n * CSS styles to ensure that the element is in the correct final state.\n *\n *\n * ### Usage Examples\n *\n *  - Transition animations applied based on\n *    the trigger's expression value\n *\n *   ```html\n *   <div [@myAnimationTrigger]=\"myStatusExp\">\n *    ...\n *   </div>\n *   ```\n *\n *   ```ts\n *   trigger(\"myAnimationTrigger\", [\n *     ..., // states\n *     transition(\"on => off, open => closed\", animate(500)),\n *     transition(\"* <=> error\", query('.indicator', animateChild()))\n *   ])\n *   ```\n *\n *  - Transition animations applied based on custom logic dependent\n *    on the trigger's expression value and provided parameters\n *\n *    ```html\n *    <div [@myAnimationTrigger]=\"{\n *     value: stepName,\n *     params: { target: currentTarget }\n *    }\">\n *     ...\n *    </div>\n *    ```\n *\n *    ```ts\n *    trigger(\"myAnimationTrigger\", [\n *      ..., // states\n *      transition(\n *        (fromState, toState, _element, params) =>\n *          ['firststep', 'laststep'].includes(fromState.toLowerCase())\n *          && toState === params?.['target'],\n *        animate('1s')\n *      )\n *    ])\n *    ```\n *\n * @publicApi\n **/\nfunction transition(stateChangeExpr, steps, options = null) {\n    return { type: AnimationMetadataType.Transition, expr: stateChangeExpr, animation: steps, options };\n}\n/**\n * Produces a reusable animation that can be invoked in another animation or sequence,\n * by calling the `useAnimation()` function.\n *\n * @param steps One or more animation objects, as returned by the `animate()`\n * or `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional developer-defined parameters.\n * Provided values for additional parameters are used as defaults,\n * and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the animation data.\n *\n * @usageNotes\n * The following example defines a reusable animation, providing some default parameter\n * values.\n *\n * ```ts\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *   style({ opacity: '{{ end }}'}))\n *   ],\n *   { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * The following invokes the defined animation with a call to `useAnimation()`,\n * passing in override parameter values.\n *\n * ```js\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If any of the passed-in parameter values are missing from this call,\n * the default values are used. If one or more parameter values are missing before a step is\n * animated, `useAnimation()` throws an error.\n *\n * @publicApi\n */\nfunction animation(steps, options = null) {\n    return { type: AnimationMetadataType.Reference, animation: steps, options };\n}\n/**\n * Executes a queried inner animation element within an animation sequence.\n *\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional override values for developer-defined parameters.\n * @return An object that encapsulates the child animation data.\n *\n * @usageNotes\n * Each time an animation is triggered in Angular, the parent animation\n * has priority and any child animations are blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations, and run them using this function.\n *\n * Note that this feature is designed to be used with `query()` and it will only work\n * with animations that are assigned using the Angular animation library. CSS keyframes\n * and transitions are not handled by this API.\n *\n * @publicApi\n */\nfunction animateChild(options = null) {\n    return { type: AnimationMetadataType.AnimateChild, options };\n}\n/**\n * Starts a reusable animation that is created using the `animation()` function.\n *\n * @param animation The reusable animation to start.\n * @param options An options object that can contain a delay value for the start of\n * the animation, and additional override values for developer-defined parameters.\n * @return An object that contains the animation parameters.\n *\n * @publicApi\n */\nfunction useAnimation(animation, options = null) {\n    return { type: AnimationMetadataType.AnimateRef, animation, options };\n}\n/**\n * Finds one or more inner elements within the current element that is\n * being animated within a sequence. Use with `animate()`.\n *\n * @param selector The element to query, or a set of elements that contain Angular-specific\n * characteristics, specified with one or more of the following tokens.\n *  - `query(\":enter\")` or `query(\":leave\")` : Query for newly inserted/removed elements (not\n *     all elements can be queried via these tokens, see\n *     [Entering and Leaving Elements](#entering-and-leaving-elements))\n *  - `query(\":animating\")` : Query all currently animating elements.\n *  - `query(\"@triggerName\")` : Query elements that contain an animation trigger.\n *  - `query(\"@*\")` : Query all elements that contain an animation triggers.\n *  - `query(\":self\")` : Include the current element into the animation sequence.\n *\n * @param animation One or more animation steps to apply to the queried element or elements.\n * An array is treated as an animation sequence.\n * @param options An options object. Use the 'limit' field to limit the total number of\n * items to collect.\n * @return An object that encapsulates the query data.\n *\n * @usageNotes\n *\n * ### Multiple Tokens\n *\n * Tokens can be merged into a combined query selector string. For example:\n *\n * ```ts\n *  query(':self, .record:enter, .record:leave, @subTrigger', [...])\n * ```\n *\n * The `query()` function collects multiple elements and works internally by using\n * `element.querySelectorAll`. Use the `limit` field of an options object to limit\n * the total number of items to be collected. For example:\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * By default, throws an error when zero items are found. Set the\n * `optional` flag to ignore this error. For example:\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Entering and Leaving Elements\n *\n * Not all elements can be queried via the `:enter` and `:leave` tokens, the only ones\n * that can are those that Angular assumes can enter/leave based on their own logic\n * (if their insertion/removal is simply a consequence of that of their parent they\n * should be queried via a different token in their parent's `:enter`/`:leave` transitions).\n *\n * The only elements Angular assumes can enter/leave based on their own logic (thus the only\n * ones that can be queried via the `:enter` and `:leave` tokens) are:\n *  - Those inserted dynamically (via `ViewContainerRef`)\n *  - Those that have a structural directive (which, under the hood, are a subset of the above ones)\n *\n * <div class=\"docs-alert docs-alert-helpful\">\n *\n *  Note that elements will be successfully queried via `:enter`/`:leave` even if their\n *  insertion/removal is not done manually via `ViewContainerRef`or caused by their structural\n *  directive (e.g. they enter/exit alongside their parent).\n *\n * </div>\n *\n * <div class=\"docs-alert docs-alert-important\">\n *\n *  There is an exception to what previously mentioned, besides elements entering/leaving based on\n *  their own logic, elements with an animation trigger can always be queried via `:leave` when\n * their parent is also leaving.\n *\n * </div>\n *\n * ### Usage Example\n *\n * The following example queries for inner elements and animates them\n * individually using `animate()`.\n *\n * ```angular-ts\n * @Component({\n *   selector: 'inner',\n *   template: `\n *     <div [@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 }))),\n *        query('.content', animate(1000, style({ opacity: 1 }))),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nfunction query(selector, animation, options = null) {\n    return { type: AnimationMetadataType.Query, selector, animation, options };\n}\n/**\n * Use within an animation `query()` call to issue a timing gap after\n * each queried item is animated.\n *\n * @param timings A delay value.\n * @param animation One ore more animation steps.\n * @returns An object that encapsulates the stagger data.\n *\n * @usageNotes\n * In the following example, a container element wraps a list of items stamped out\n * by an `@for` block. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * Each time items are added, the opacity fade-in animation runs,\n * and each removed item is faded out.\n * When either of these animations occur, the stagger effect is\n * applied after each item's animation is started.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [@listAnimation]=\"items.length\">\n *   @for(item of items; track $index) {\n *      <div>{{ item }}</div>\n *   }\n * </div>\n * ```\n *\n * Here is the component code:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '@angular/animations';\n * @Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *     ...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *    }\n *  }\n * ```\n *\n * Here is the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * @publicApi\n */\nfunction stagger(timings, animation) {\n    return { type: AnimationMetadataType.Stagger, timings, animation };\n}\n\n/**\n * An empty programmatic controller for reusable animations.\n * Used internally when animations are disabled, to avoid\n * checking for the null case when an animation player is expected.\n *\n * @see {@link animate}\n * @see {@link AnimationPlayer}\n *\n * @publicApi\n */\nclass NoopAnimationPlayer {\n    _onDoneFns = [];\n    _onStartFns = [];\n    _onDestroyFns = [];\n    _originalOnDoneFns = [];\n    _originalOnStartFns = [];\n    _started = false;\n    _destroyed = false;\n    _finished = false;\n    _position = 0;\n    parentPlayer = null;\n    totalTime;\n    constructor(duration = 0, delay = 0) {\n        this.totalTime = duration + delay;\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach((fn) => fn());\n            this._onDoneFns = [];\n        }\n    }\n    onStart(fn) {\n        this._originalOnStartFns.push(fn);\n        this._onStartFns.push(fn);\n    }\n    onDone(fn) {\n        this._originalOnDoneFns.push(fn);\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    init() { }\n    play() {\n        if (!this.hasStarted()) {\n            this._onStart();\n            this.triggerMicrotask();\n        }\n        this._started = true;\n    }\n    /** @internal */\n    triggerMicrotask() {\n        queueMicrotask(() => this._onFinish());\n    }\n    _onStart() {\n        this._onStartFns.forEach((fn) => fn());\n        this._onStartFns = [];\n    }\n    pause() { }\n    restart() { }\n    finish() {\n        this._onFinish();\n    }\n    destroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            if (!this.hasStarted()) {\n                this._onStart();\n            }\n            this.finish();\n            this._onDestroyFns.forEach((fn) => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this._started = false;\n        this._finished = false;\n        this._onStartFns = this._originalOnStartFns;\n        this._onDoneFns = this._originalOnDoneFns;\n    }\n    setPosition(position) {\n        this._position = this.totalTime ? position * this.totalTime : 1;\n    }\n    getPosition() {\n        return this.totalTime ? this._position / this.totalTime : 1;\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach((fn) => fn());\n        methods.length = 0;\n    }\n}\n\n/**\n * A programmatic controller for a group of reusable animations.\n * Used internally to control animations.\n *\n * @see {@link AnimationPlayer}\n * @see {@link animations/group group}\n *\n */\nclass AnimationGroupPlayer {\n    _onDoneFns = [];\n    _onStartFns = [];\n    _finished = false;\n    _started = false;\n    _destroyed = false;\n    _onDestroyFns = [];\n    parentPlayer = null;\n    totalTime = 0;\n    players;\n    constructor(_players) {\n        this.players = _players;\n        let doneCount = 0;\n        let destroyCount = 0;\n        let startCount = 0;\n        const total = this.players.length;\n        if (total == 0) {\n            queueMicrotask(() => this._onFinish());\n        }\n        else {\n            this.players.forEach((player) => {\n                player.onDone(() => {\n                    if (++doneCount == total) {\n                        this._onFinish();\n                    }\n                });\n                player.onDestroy(() => {\n                    if (++destroyCount == total) {\n                        this._onDestroy();\n                    }\n                });\n                player.onStart(() => {\n                    if (++startCount == total) {\n                        this._onStart();\n                    }\n                });\n            });\n        }\n        this.totalTime = this.players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach((fn) => fn());\n            this._onDoneFns = [];\n        }\n    }\n    init() {\n        this.players.forEach((player) => player.init());\n    }\n    onStart(fn) {\n        this._onStartFns.push(fn);\n    }\n    _onStart() {\n        if (!this.hasStarted()) {\n            this._started = true;\n            this._onStartFns.forEach((fn) => fn());\n            this._onStartFns = [];\n        }\n    }\n    onDone(fn) {\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    play() {\n        if (!this.parentPlayer) {\n            this.init();\n        }\n        this._onStart();\n        this.players.forEach((player) => player.play());\n    }\n    pause() {\n        this.players.forEach((player) => player.pause());\n    }\n    restart() {\n        this.players.forEach((player) => player.restart());\n    }\n    finish() {\n        this._onFinish();\n        this.players.forEach((player) => player.finish());\n    }\n    destroy() {\n        this._onDestroy();\n    }\n    _onDestroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._onFinish();\n            this.players.forEach((player) => player.destroy());\n            this._onDestroyFns.forEach((fn) => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this.players.forEach((player) => player.reset());\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    }\n    setPosition(p) {\n        const timeAtPosition = p * this.totalTime;\n        this.players.forEach((player) => {\n            const position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n            player.setPosition(position);\n        });\n    }\n    getPosition() {\n        const longestPlayer = this.players.reduce((longestSoFar, player) => {\n            const newPlayerIsLongest = longestSoFar === null || player.totalTime > longestSoFar.totalTime;\n            return newPlayerIsLongest ? player : longestSoFar;\n        }, null);\n        return longestPlayer != null ? longestPlayer.getPosition() : 0;\n    }\n    beforeDestroy() {\n        this.players.forEach((player) => {\n            if (player.beforeDestroy) {\n                player.beforeDestroy();\n            }\n        });\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach((fn) => fn());\n        methods.length = 0;\n    }\n}\n\nconst ɵPRE_STYLE = '!';\n\nexport { AUTO_STYLE, AnimationGroupPlayer, AnimationMetadataType, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, ɵPRE_STYLE };\n\n","/**\n * @license Angular v20.1.0\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, ANIMATION_MODULE_TYPE, ɵRuntimeError as _RuntimeError, Inject, ViewEncapsulation } from '@angular/core';\nimport { sequence } from './private_export.mjs';\nexport { AUTO_STYLE, AnimationMetadataType, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ɵAnimationGroupPlayer, ɵPRE_STYLE } from './private_export.mjs';\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass AnimationBuilder {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.0\", ngImport: i0, type: AnimationBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.0\", ngImport: i0, type: AnimationBuilder, providedIn: 'root', useFactory: () => inject(BrowserAnimationBuilder) });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.0\", ngImport: i0, type: AnimationBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: () => inject(BrowserAnimationBuilder) }]\n        }] });\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n */\nclass AnimationFactory {\n}\nclass BrowserAnimationBuilder extends AnimationBuilder {\n    animationModuleType = inject(ANIMATION_MODULE_TYPE, { optional: true });\n    _nextAnimationId = 0;\n    _renderer;\n    constructor(rootRenderer, doc) {\n        super();\n        const typeData = {\n            id: '0',\n            encapsulation: ViewEncapsulation.None,\n            styles: [],\n            data: { animation: [] },\n        };\n        this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n        if (this.animationModuleType === null && !isAnimationRenderer(this._renderer)) {\n            // We only support AnimationRenderer & DynamicDelegationRenderer for this AnimationBuilder\n            throw new _RuntimeError(3600 /* RuntimeErrorCode.BROWSER_ANIMATION_BUILDER_INJECTED_WITHOUT_ANIMATIONS */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                'Angular detected that the `AnimationBuilder` was injected, but animation support was not enabled. ' +\n                    'Please make sure that you enable animations in your application by calling `provideAnimations()` or `provideAnimationsAsync()` function.');\n        }\n    }\n    build(animation) {\n        const id = this._nextAnimationId;\n        this._nextAnimationId++;\n        const entry = Array.isArray(animation) ? sequence(animation) : animation;\n        issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n        return new BrowserAnimationFactory(id, this._renderer);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.0\", ngImport: i0, type: BrowserAnimationBuilder, deps: [{ token: i0.RendererFactory2 }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.0\", ngImport: i0, type: BrowserAnimationBuilder, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.0\", ngImport: i0, type: BrowserAnimationBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.RendererFactory2 }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\nclass BrowserAnimationFactory extends AnimationFactory {\n    _id;\n    _renderer;\n    constructor(_id, _renderer) {\n        super();\n        this._id = _id;\n        this._renderer = _renderer;\n    }\n    create(element, options) {\n        return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n    }\n}\nclass RendererAnimationPlayer {\n    id;\n    element;\n    _renderer;\n    parentPlayer = null;\n    _started = false;\n    constructor(id, element, options, _renderer) {\n        this.id = id;\n        this.element = element;\n        this._renderer = _renderer;\n        this._command('create', options);\n    }\n    _listen(eventName, callback) {\n        return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n    }\n    _command(command, ...args) {\n        issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n    }\n    onDone(fn) {\n        this._listen('done', fn);\n    }\n    onStart(fn) {\n        this._listen('start', fn);\n    }\n    onDestroy(fn) {\n        this._listen('destroy', fn);\n    }\n    init() {\n        this._command('init');\n    }\n    hasStarted() {\n        return this._started;\n    }\n    play() {\n        this._command('play');\n        this._started = true;\n    }\n    pause() {\n        this._command('pause');\n    }\n    restart() {\n        this._command('restart');\n    }\n    finish() {\n        this._command('finish');\n    }\n    destroy() {\n        this._command('destroy');\n    }\n    reset() {\n        this._command('reset');\n        this._started = false;\n    }\n    setPosition(p) {\n        this._command('setPosition', p);\n    }\n    getPosition() {\n        return unwrapAnimationRenderer(this._renderer)?.engine?.players[this.id]?.getPosition() ?? 0;\n    }\n    totalTime = 0;\n}\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n    renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n/**\n * The following 2 methods cannot reference their correct types (AnimationRenderer &\n * DynamicDelegationRenderer) since this would introduce a import cycle.\n */\nfunction unwrapAnimationRenderer(renderer) {\n    const type = renderer.ɵtype;\n    if (type === 0 /* AnimationRendererType.Regular */) {\n        return renderer;\n    }\n    else if (type === 1 /* AnimationRendererType.Delegated */) {\n        return renderer.animationRenderer;\n    }\n    return null;\n}\nfunction isAnimationRenderer(renderer) {\n    const type = renderer.ɵtype;\n    return type === 0 /* AnimationRendererType.Regular */ || type === 1 /* AnimationRendererType.Delegated */;\n}\n\nexport { AnimationBuilder, AnimationFactory, sequence, BrowserAnimationBuilder as ɵBrowserAnimationBuilder };\n\n","import * as i0 from '@angular/core';\nimport { Directive, InjectionToken, inject, Injectable, ComponentFactoryResolver, ApplicationRef, SecurityContext, Injector, Inject, signal, Component, ChangeDetectionStrategy, HostBinding, HostListener, makeEnvironmentProviders, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DOCUMENT, NgIf } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/platform-browser';\n\nclass ToastContainerDirective {\n    el;\n    constructor(el) {\n        this.el = el;\n    }\n    getContainerElement() {\n        return this.el.nativeElement;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastContainerDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.0\", type: ToastContainerDirective, isStandalone: true, selector: \"[toastContainer]\", exportAs: [\"toastContainer\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastContainerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[toastContainer]',\n                    exportAs: 'toastContainer',\n                    standalone: true\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }] });\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal {\n    _attachedHost;\n    /** The type of the component that will be instantiated for attachment. */\n    component;\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalHost.\n     * The origin necessary when the host is outside of the Angular application context.\n     */\n    viewContainerRef;\n    /** Injector used for the instantiation of the component. */\n    injector;\n    constructor(component, injector) {\n        this.component = component;\n        this.injector = injector;\n    }\n    /** Attach this portal to a host. */\n    attach(host, newestOnTop) {\n        this._attachedHost = host;\n        return host.attach(this, newestOnTop);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        const host = this._attachedHost;\n        if (host) {\n            this._attachedHost = undefined;\n            return host.detach();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalHost reference without performing `attach()`. This is used directly by\n     * the PortalHost when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nclass BasePortalHost {\n    /** The portal currently attached to the host. */\n    _attachedPortal;\n    /** A function that will permanently dispose this host. */\n    _disposeFn;\n    attach(portal, newestOnTop) {\n        this._attachedPortal = portal;\n        return this.attachComponentPortal(portal, newestOnTop);\n    }\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost();\n        }\n        this._attachedPortal = undefined;\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = undefined;\n        }\n    }\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n}\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nclass ToastRef {\n    _overlayRef;\n    /** The instance of component opened into the toast. */\n    componentInstance;\n    /** Count of duplicates of this toast */\n    duplicatesCount = 0;\n    /** Subject for notifying the user that the toast has finished closing. */\n    _afterClosed = new Subject();\n    /** triggered when toast is activated */\n    _activate = new Subject();\n    /** notifies the toast that it should close before the timeout */\n    _manualClose = new Subject();\n    /** notifies the toast that it should reset the timeouts */\n    _resetTimeout = new Subject();\n    /** notifies the toast that it should count a duplicate toast */\n    _countDuplicate = new Subject();\n    constructor(_overlayRef) {\n        this._overlayRef = _overlayRef;\n    }\n    manualClose() {\n        this._manualClose.next();\n        this._manualClose.complete();\n    }\n    manualClosed() {\n        return this._manualClose.asObservable();\n    }\n    timeoutReset() {\n        return this._resetTimeout.asObservable();\n    }\n    countDuplicate() {\n        return this._countDuplicate.asObservable();\n    }\n    /**\n     * Close the toast.\n     */\n    close() {\n        this._overlayRef.detach();\n        this._afterClosed.next();\n        this._manualClose.next();\n        this._afterClosed.complete();\n        this._manualClose.complete();\n        this._activate.complete();\n        this._resetTimeout.complete();\n        this._countDuplicate.complete();\n    }\n    /** Gets an observable that is notified when the toast is finished closing. */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    isInactive() {\n        return this._activate.isStopped;\n    }\n    activate() {\n        this._activate.next();\n        this._activate.complete();\n    }\n    /** Gets an observable that is notified when the toast has started opening. */\n    afterActivate() {\n        return this._activate.asObservable();\n    }\n    /** Reset the toast timouts and count duplicates */\n    onDuplicate(resetTimeout, countDuplicate) {\n        if (resetTimeout) {\n            this._resetTimeout.next();\n        }\n        if (countDuplicate) {\n            this._countDuplicate.next(++this.duplicatesCount);\n        }\n    }\n}\n\n/**\n * Everything a toast needs to launch\n */\nclass ToastPackage {\n    toastId;\n    config;\n    message;\n    title;\n    toastType;\n    toastRef;\n    _onTap = new Subject();\n    _onAction = new Subject();\n    constructor(toastId, config, message, title, toastType, toastRef) {\n        this.toastId = toastId;\n        this.config = config;\n        this.message = message;\n        this.title = title;\n        this.toastType = toastType;\n        this.toastRef = toastRef;\n        this.toastRef.afterClosed().subscribe(() => {\n            this._onAction.complete();\n            this._onTap.complete();\n        });\n    }\n    /** Fired on click */\n    triggerTap() {\n        this._onTap.next();\n        if (this.config.tapToDismiss) {\n            this._onTap.complete();\n        }\n    }\n    onTap() {\n        return this._onTap.asObservable();\n    }\n    /** available for use in custom toast */\n    triggerAction(action) {\n        this._onAction.next(action);\n    }\n    onAction() {\n        return this._onAction.asObservable();\n    }\n}\nconst DefaultNoComponentGlobalConfig = {\n    maxOpened: 0,\n    autoDismiss: false,\n    newestOnTop: true,\n    preventDuplicates: false,\n    countDuplicates: false,\n    resetTimeoutOnDuplicate: false,\n    includeTitleDuplicates: false,\n    iconClasses: {\n        error: 'toast-error',\n        info: 'toast-info',\n        success: 'toast-success',\n        warning: 'toast-warning',\n    },\n    // Individual\n    closeButton: false,\n    disableTimeOut: false,\n    timeOut: 5000,\n    extendedTimeOut: 1000,\n    enableHtml: false,\n    progressBar: false,\n    toastClass: 'ngx-toastr',\n    positionClass: 'toast-top-right',\n    titleClass: 'toast-title',\n    messageClass: 'toast-message',\n    easing: 'ease-in',\n    easeTime: 300,\n    tapToDismiss: true,\n    onActivateTick: false,\n    progressAnimation: 'decreasing',\n};\nconst TOAST_CONFIG = new InjectionToken('ToastConfig');\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nclass DomPortalHost extends BasePortalHost {\n    _hostDomElement;\n    _componentFactoryResolver;\n    _appRef;\n    constructor(_hostDomElement, _componentFactoryResolver, _appRef) {\n        super();\n        this._hostDomElement = _hostDomElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     */\n    attachComponentPortal(portal, newestOnTop) {\n        const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the ChangeDetector for that component to the application (which\n        // happens automatically when using a ViewContainer).\n        componentRef = componentFactory.create(portal.injector);\n        // When creating a component outside of a ViewContainer, we need to manually register\n        // its ChangeDetector with the application. This API is unfortunately not yet published\n        // in Angular core. The change detector must also be deregistered when the component\n        // is destroyed to prevent memory leaks.\n        this._appRef.attachView(componentRef.hostView);\n        this.setDisposeFn(() => {\n            this._appRef.detachView(componentRef.hostView);\n            componentRef.destroy();\n        });\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        if (newestOnTop) {\n            this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n        }\n        else {\n            this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n        }\n        return componentRef;\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n\n/** Container inside which all toasts will render. */\nclass OverlayContainer {\n    _document = inject(DOCUMENT);\n    _containerElement;\n    ngOnDestroy() {\n        if (this._containerElement && this._containerElement.parentNode) {\n            this._containerElement.parentNode.removeChild(this._containerElement);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body\n     * and 'aria-live=\"polite\"'\n     */\n    _createContainer() {\n        const container = this._document.createElement('div');\n        container.classList.add('overlay-container');\n        container.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: OverlayContainer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: OverlayContainer, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    _portalHost;\n    constructor(_portalHost) {\n        this._portalHost = _portalHost;\n    }\n    attach(portal, newestOnTop = true) {\n        return this._portalHost.attach(portal, newestOnTop);\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns Resolves when the overlay has been detached.\n     */\n    detach() {\n        return this._portalHost.detach();\n    }\n}\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    _overlayContainer = inject(OverlayContainer);\n    _componentFactoryResolver = inject(ComponentFactoryResolver);\n    _appRef = inject(ApplicationRef);\n    _document = inject(DOCUMENT);\n    // Namespace panes by overlay container\n    _paneElements = new Map();\n    /**\n     * Creates an overlay.\n     * @returns A reference to the created overlay.\n     */\n    create(positionClass, overlayContainer) {\n        // get existing pane if possible\n        return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n    }\n    getPaneElement(positionClass = '', overlayContainer) {\n        if (!this._paneElements.get(overlayContainer)) {\n            this._paneElements.set(overlayContainer, {});\n        }\n        if (!this._paneElements.get(overlayContainer)[positionClass]) {\n            this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n        }\n        return this._paneElements.get(overlayContainer)[positionClass];\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(positionClass, overlayContainer) {\n        const pane = this._document.createElement('div');\n        pane.id = 'toast-container';\n        pane.classList.add(positionClass);\n        pane.classList.add('toast-container');\n        if (!overlayContainer) {\n            this._overlayContainer.getContainerElement().appendChild(pane);\n        }\n        else {\n            overlayContainer.getContainerElement().appendChild(pane);\n        }\n        return pane;\n    }\n    /**\n     * Create a DomPortalHost into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal host.\n     * @returns A portal host for the given DOM element.\n     */\n    _createPortalHost(pane) {\n        return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n    }\n    /**\n     * Creates an OverlayRef for an overlay in the given DOM element.\n     * @param pane DOM element for the overlay\n     */\n    _createOverlayRef(pane) {\n        return new OverlayRef(this._createPortalHost(pane));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: Overlay, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: Overlay, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass ToastrService {\n    overlay;\n    _injector;\n    sanitizer;\n    ngZone;\n    toastrConfig;\n    currentlyActive = 0;\n    toasts = [];\n    overlayContainer;\n    previousToastMessage;\n    index = 0;\n    constructor(token, overlay, _injector, sanitizer, ngZone) {\n        this.overlay = overlay;\n        this._injector = _injector;\n        this.sanitizer = sanitizer;\n        this.ngZone = ngZone;\n        this.toastrConfig = {\n            ...token.default,\n            ...token.config,\n        };\n        if (token.config.iconClasses) {\n            this.toastrConfig.iconClasses = {\n                ...token.default.iconClasses,\n                ...token.config.iconClasses,\n            };\n        }\n    }\n    /** show toast */\n    show(message, title, override = {}, type = '') {\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show successful toast */\n    success(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.success || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show error toast */\n    error(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.error || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show info toast */\n    info(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.info || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show warning toast */\n    warning(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.warning || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /**\n     * Remove all or a single toast by id\n     */\n    clear(toastId) {\n        // Call every toastRef manualClose function\n        for (const toast of this.toasts) {\n            if (toastId !== undefined) {\n                if (toast.toastId === toastId) {\n                    toast.toastRef.manualClose();\n                    return;\n                }\n            }\n            else {\n                toast.toastRef.manualClose();\n            }\n        }\n    }\n    /**\n     * Remove and destroy a single toast by id\n     */\n    remove(toastId) {\n        const found = this._findToast(toastId);\n        if (!found) {\n            return false;\n        }\n        found.activeToast.toastRef.close();\n        this.toasts.splice(found.index, 1);\n        this.currentlyActive = this.currentlyActive - 1;\n        if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n            return false;\n        }\n        if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n            const p = this.toasts[this.currentlyActive].toastRef;\n            if (!p.isInactive()) {\n                this.currentlyActive = this.currentlyActive + 1;\n                p.activate();\n            }\n        }\n        return true;\n    }\n    /**\n     * Determines if toast message is already shown\n     */\n    findDuplicate(title = '', message = '', resetOnDuplicate, countDuplicates) {\n        const { includeTitleDuplicates } = this.toastrConfig;\n        for (const toast of this.toasts) {\n            const hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n            if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n                toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n                return toast;\n            }\n        }\n        return null;\n    }\n    /** create a clone of global config and apply individual settings */\n    applyConfig(override = {}) {\n        return { ...this.toastrConfig, ...override };\n    }\n    /**\n     * Find toast object by id\n     */\n    _findToast(toastId) {\n        for (let i = 0; i < this.toasts.length; i++) {\n            if (this.toasts[i].toastId === toastId) {\n                return { index: i, activeToast: this.toasts[i] };\n            }\n        }\n        return null;\n    }\n    /**\n     * Determines the need to run inside angular's zone then builds the toast\n     */\n    _preBuildNotification(toastType, message, title, config) {\n        if (config.onActivateTick) {\n            return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n        }\n        return this._buildNotification(toastType, message, title, config);\n    }\n    /**\n     * Creates and attaches toast data to component\n     * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n     */\n    _buildNotification(toastType, message, title, config) {\n        if (!config.toastComponent) {\n            throw new Error('toastComponent required');\n        }\n        // max opened and auto dismiss = true\n        // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n        // a timeout at all\n        const duplicate = this.findDuplicate(title, message, this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0, this.toastrConfig.countDuplicates);\n        if (((this.toastrConfig.includeTitleDuplicates && title) || message) &&\n            this.toastrConfig.preventDuplicates &&\n            duplicate !== null) {\n            return duplicate;\n        }\n        this.previousToastMessage = message;\n        let keepInactive = false;\n        if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n            keepInactive = true;\n            if (this.toastrConfig.autoDismiss) {\n                this.clear(this.toasts[0].toastId);\n            }\n        }\n        const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n        this.index = this.index + 1;\n        let sanitizedMessage = message;\n        if (message && config.enableHtml) {\n            sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n        }\n        const toastRef = new ToastRef(overlayRef);\n        const toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n        /** New injector that contains an instance of `ToastPackage`. */\n        const providers = [{ provide: ToastPackage, useValue: toastPackage }];\n        const toastInjector = Injector.create({ providers, parent: this._injector });\n        const component = new ComponentPortal(config.toastComponent, toastInjector);\n        const portal = overlayRef.attach(component, config.newestOnTop);\n        toastRef.componentInstance = portal.instance;\n        const ins = {\n            toastId: this.index,\n            title: title || '',\n            message: message || '',\n            toastRef,\n            onShown: toastRef.afterActivate(),\n            onHidden: toastRef.afterClosed(),\n            onTap: toastPackage.onTap(),\n            onAction: toastPackage.onAction(),\n            portal,\n        };\n        if (!keepInactive) {\n            this.currentlyActive = this.currentlyActive + 1;\n            setTimeout(() => {\n                ins.toastRef.activate();\n            });\n        }\n        this.toasts.push(ins);\n        return ins;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastrService, deps: [{ token: TOAST_CONFIG }, { token: Overlay }, { token: i0.Injector }, { token: i2.DomSanitizer }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastrService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastrService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TOAST_CONFIG]\n                }] }, { type: Overlay }, { type: i0.Injector }, { type: i2.DomSanitizer }, { type: i0.NgZone }] });\n\nclass Toast {\n    toastrService;\n    toastPackage;\n    ngZone;\n    message;\n    title;\n    options;\n    duplicatesCount;\n    originalTimeout;\n    /** width of progress bar */\n    width = signal(-1);\n    /** a combination of toast type and options.toastClass */\n    toastClasses = '';\n    state;\n    /** controls animation */\n    get _state() {\n        return this.state();\n    }\n    /** hides component when waiting to be displayed */\n    get displayStyle() {\n        if (this.state().value === 'inactive') {\n            return 'none';\n        }\n        return;\n    }\n    timeout;\n    intervalId;\n    hideTime;\n    sub;\n    sub1;\n    sub2;\n    sub3;\n    constructor(toastrService, toastPackage, ngZone) {\n        this.toastrService = toastrService;\n        this.toastPackage = toastPackage;\n        this.ngZone = ngZone;\n        this.message = toastPackage.message;\n        this.title = toastPackage.title;\n        this.options = toastPackage.config;\n        this.originalTimeout = toastPackage.config.timeOut;\n        this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n        this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n            this.activateToast();\n        });\n        this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n            this.remove();\n        });\n        this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n            this.resetTimeout();\n        });\n        this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n            this.duplicatesCount = count;\n        });\n        this.state = signal({\n            value: 'inactive',\n            params: {\n                easeTime: this.toastPackage.config.easeTime,\n                easing: 'ease-in',\n            },\n        });\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n        this.sub1.unsubscribe();\n        this.sub2.unsubscribe();\n        this.sub3.unsubscribe();\n        clearInterval(this.intervalId);\n        clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast() {\n        this.state.update(state => ({ ...state, value: 'active' }));\n        if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') &&\n            this.options.timeOut) {\n            this.outsideTimeout(() => this.remove(), this.options.timeOut);\n            this.hideTime = new Date().getTime() + this.options.timeOut;\n            if (this.options.progressBar) {\n                this.outsideInterval(() => this.updateProgress(), 10);\n            }\n        }\n    }\n    /**\n     * updates progress bar width\n     */\n    updateProgress() {\n        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut) {\n            return;\n        }\n        const now = new Date().getTime();\n        const remaining = this.hideTime - now;\n        this.width.set((remaining / this.options.timeOut) * 100);\n        if (this.options.progressAnimation === 'increasing') {\n            this.width.update(width => 100 - width);\n        }\n        if (this.width() <= 0) {\n            this.width.set(0);\n        }\n        if (this.width() >= 100) {\n            this.width.set(100);\n        }\n    }\n    resetTimeout() {\n        clearTimeout(this.timeout);\n        clearInterval(this.intervalId);\n        this.state.update(state => ({ ...state, value: 'active' }));\n        this.outsideTimeout(() => this.remove(), this.originalTimeout);\n        this.options.timeOut = this.originalTimeout;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width.set(-1);\n        if (this.options.progressBar) {\n            this.outsideInterval(() => this.updateProgress(), 10);\n        }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove() {\n        if (this.state().value === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.state.update(state => ({ ...state, value: 'removed' }));\n        this.outsideTimeout(() => this.toastrService.remove(this.toastPackage.toastId), +this.toastPackage.config.easeTime);\n    }\n    tapToast() {\n        if (this.state().value === 'removed') {\n            return;\n        }\n        this.toastPackage.triggerTap();\n        if (this.options.tapToDismiss) {\n            this.remove();\n        }\n    }\n    stickAround() {\n        if (this.state().value === 'removed') {\n            return;\n        }\n        if (this.options.disableTimeOut !== 'extendedTimeOut') {\n            clearTimeout(this.timeout);\n            this.options.timeOut = 0;\n            this.hideTime = 0;\n            // disable progressBar\n            clearInterval(this.intervalId);\n            this.width.set(0);\n        }\n    }\n    delayedHideToast() {\n        if ((this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n            this.options.extendedTimeOut === 0 ||\n            this.state().value === 'removed') {\n            return;\n        }\n        this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n        this.options.timeOut = this.options.extendedTimeOut;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width.set(-1);\n        if (this.options.progressBar) {\n            this.outsideInterval(() => this.updateProgress(), 10);\n        }\n    }\n    outsideTimeout(func, timeout) {\n        if (this.ngZone) {\n            this.ngZone.runOutsideAngular(() => (this.timeout = setTimeout(() => this.runInsideAngular(func), timeout)));\n        }\n        else {\n            this.timeout = setTimeout(() => func(), timeout);\n        }\n    }\n    outsideInterval(func, timeout) {\n        if (this.ngZone) {\n            this.ngZone.runOutsideAngular(() => (this.intervalId = setInterval(() => this.runInsideAngular(func), timeout)));\n        }\n        else {\n            this.intervalId = setInterval(() => func(), timeout);\n        }\n    }\n    runInsideAngular(func) {\n        if (this.ngZone) {\n            this.ngZone.run(() => func());\n        }\n        else {\n            func();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: Toast, deps: [{ token: ToastrService }, { token: ToastPackage }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.0\", type: Toast, isStandalone: true, selector: \"[toast-component]\", host: { listeners: { \"click\": \"tapToast()\", \"mouseenter\": \"stickAround()\", \"mouseleave\": \"delayedHideToast()\" }, properties: { \"class\": \"this.toastClasses\", \"@flyInOut\": \"this._state\", \"style.display\": \"this.displayStyle\" } }, ngImport: i0, template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width() + '%'\"></div>\n  </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n            trigger('flyInOut', [\n                state('inactive', style({ opacity: 0 })),\n                state('active', style({ opacity: 1 })),\n                state('removed', style({ opacity: 0 })),\n                transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')),\n                transition('active => removed', animate('{{ easeTime }}ms {{ easing }}')),\n            ]),\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: Toast, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[toast-component]',\n                    template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width() + '%'\"></div>\n  </div>\n  `,\n                    animations: [\n                        trigger('flyInOut', [\n                            state('inactive', style({ opacity: 0 })),\n                            state('active', style({ opacity: 1 })),\n                            state('removed', style({ opacity: 0 })),\n                            transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')),\n                            transition('active => removed', animate('{{ easeTime }}ms {{ easing }}')),\n                        ]),\n                    ],\n                    preserveWhitespaces: false,\n                    standalone: true,\n                    imports: [NgIf],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: () => [{ type: ToastrService }, { type: ToastPackage }, { type: i0.NgZone }], propDecorators: { toastClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], _state: [{\n                type: HostBinding,\n                args: ['@flyInOut']\n            }], displayStyle: [{\n                type: HostBinding,\n                args: ['style.display']\n            }], tapToast: [{\n                type: HostListener,\n                args: ['click']\n            }], stickAround: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], delayedHideToast: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nconst DefaultGlobalConfig = {\n    ...DefaultNoComponentGlobalConfig,\n    toastComponent: Toast,\n};\n/**\n * @description\n * Provides the `TOAST_CONFIG` token with the given config.\n *\n * @param config The config to configure toastr.\n * @returns The environment providers.\n *\n * @example\n * ```ts\n * import { provideToastr } from 'ngx-toastr';\n *\n * bootstrap(AppComponent, {\n *   providers: [\n *     provideToastr({\n *       timeOut: 2000,\n *       positionClass: 'toast-top-right',\n *     }),\n *   ],\n * })\n */\nconst provideToastr = (config = {}) => {\n    const providers = [\n        {\n            provide: TOAST_CONFIG,\n            useValue: {\n                default: DefaultGlobalConfig,\n                config,\n            }\n        }\n    ];\n    return makeEnvironmentProviders(providers);\n};\n\nclass ToastrModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastrModule,\n            providers: [provideToastr(config)],\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastrModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastrModule, imports: [Toast], exports: [Toast] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastrModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastrModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Toast],\n                    exports: [Toast],\n                }]\n        }] });\nclass ToastrComponentlessModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastrModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultNoComponentGlobalConfig,\n                        config,\n                    },\n                },\n            ],\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastrComponentlessModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastrComponentlessModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastrComponentlessModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastrComponentlessModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\nclass ToastNoAnimation {\n    toastrService;\n    toastPackage;\n    appRef;\n    message;\n    title;\n    options;\n    duplicatesCount;\n    originalTimeout;\n    /** width of progress bar */\n    width = signal(-1);\n    /** a combination of toast type and options.toastClass */\n    toastClasses = '';\n    /** hides component when waiting to be displayed */\n    get displayStyle() {\n        if (this.state() === 'inactive') {\n            return 'none';\n        }\n        return null;\n    }\n    /** controls animation */\n    state = signal('inactive');\n    timeout;\n    intervalId;\n    hideTime;\n    sub;\n    sub1;\n    sub2;\n    sub3;\n    constructor(toastrService, toastPackage, appRef) {\n        this.toastrService = toastrService;\n        this.toastPackage = toastPackage;\n        this.appRef = appRef;\n        this.message = toastPackage.message;\n        this.title = toastPackage.title;\n        this.options = toastPackage.config;\n        this.originalTimeout = toastPackage.config.timeOut;\n        this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n        this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n            this.activateToast();\n        });\n        this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n            this.remove();\n        });\n        this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n            this.resetTimeout();\n        });\n        this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n            this.duplicatesCount = count;\n        });\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n        this.sub1.unsubscribe();\n        this.sub2.unsubscribe();\n        this.sub3.unsubscribe();\n        clearInterval(this.intervalId);\n        clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast() {\n        this.state.set('active');\n        if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n            this.timeout = setTimeout(() => {\n                this.remove();\n            }, this.options.timeOut);\n            this.hideTime = new Date().getTime() + this.options.timeOut;\n            if (this.options.progressBar) {\n                this.intervalId = setInterval(() => this.updateProgress(), 10);\n            }\n        }\n        if (this.options.onActivateTick) {\n            this.appRef.tick();\n        }\n    }\n    /**\n     * updates progress bar width\n     */\n    updateProgress() {\n        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut) {\n            return;\n        }\n        const now = new Date().getTime();\n        const remaining = this.hideTime - now;\n        this.width.set((remaining / this.options.timeOut) * 100);\n        if (this.options.progressAnimation === 'increasing') {\n            this.width.update(width => 100 - width);\n        }\n        if (this.width() <= 0) {\n            this.width.set(0);\n        }\n        if (this.width() >= 100) {\n            this.width.set(100);\n        }\n    }\n    resetTimeout() {\n        clearTimeout(this.timeout);\n        clearInterval(this.intervalId);\n        this.state.set('active');\n        this.options.timeOut = this.originalTimeout;\n        this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\n        this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n        this.width.set(-1);\n        if (this.options.progressBar) {\n            this.intervalId = setInterval(() => this.updateProgress(), 10);\n        }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove() {\n        if (this.state() === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.state.set('removed');\n        this.timeout = setTimeout(() => this.toastrService.remove(this.toastPackage.toastId));\n    }\n    tapToast() {\n        if (this.state() === 'removed') {\n            return;\n        }\n        this.toastPackage.triggerTap();\n        if (this.options.tapToDismiss) {\n            this.remove();\n        }\n    }\n    stickAround() {\n        if (this.state() === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.options.timeOut = 0;\n        this.hideTime = 0;\n        // disable progressBar\n        clearInterval(this.intervalId);\n        this.width.set(0);\n    }\n    delayedHideToast() {\n        if ((this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n            this.options.extendedTimeOut === 0 ||\n            this.state() === 'removed') {\n            return;\n        }\n        this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n        this.options.timeOut = this.options.extendedTimeOut;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width.set(-1);\n        if (this.options.progressBar) {\n            this.intervalId = setInterval(() => this.updateProgress(), 10);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastNoAnimation, deps: [{ token: ToastrService }, { token: ToastPackage }, { token: i0.ApplicationRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.0\", type: ToastNoAnimation, isStandalone: true, selector: \"[toast-component]\", host: { listeners: { \"click\": \"tapToast()\", \"mouseenter\": \"stickAround()\", \"mouseleave\": \"delayedHideToast()\" }, properties: { \"class\": \"this.toastClasses\", \"style.display\": \"this.displayStyle\" } }, ngImport: i0, template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width() + '%'\"></div>\n  </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastNoAnimation, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[toast-component]',\n                    template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width() + '%'\"></div>\n  </div>\n  `,\n                    standalone: true,\n                    imports: [NgIf],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: () => [{ type: ToastrService }, { type: ToastPackage }, { type: i0.ApplicationRef }], propDecorators: { toastClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], displayStyle: [{\n                type: HostBinding,\n                args: ['style.display']\n            }], tapToast: [{\n                type: HostListener,\n                args: ['click']\n            }], stickAround: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], delayedHideToast: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\nconst DefaultNoAnimationsGlobalConfig = {\n    ...DefaultNoComponentGlobalConfig,\n    toastComponent: ToastNoAnimation,\n};\nclass ToastNoAnimationModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastNoAnimationModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultNoAnimationsGlobalConfig,\n                        config,\n                    },\n                },\n            ],\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastNoAnimationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastNoAnimationModule, imports: [ToastNoAnimation], exports: [ToastNoAnimation] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastNoAnimationModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ToastNoAnimationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ToastNoAnimation],\n                    exports: [ToastNoAnimation],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, ComponentPortal, DefaultGlobalConfig, DefaultNoAnimationsGlobalConfig, DefaultNoComponentGlobalConfig, Overlay, OverlayContainer, OverlayRef, TOAST_CONFIG, Toast, ToastContainerDirective, ToastNoAnimation, ToastNoAnimationModule, ToastPackage, ToastRef, ToastrComponentlessModule, ToastrModule, ToastrService, provideToastr };\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Transporte } from './transporte.model';\r\nimport { Residuo } from './residuo.model';\r\nimport { environment } from '../../../environments/environment';\r\n\r\ninterface CarrierDto {\r\n  id: number;\r\n  carrier: string;\r\n  destiny: string;\r\n  driver: string;\r\n  patent: string;\r\n  departureTime: string;\r\n  arrivalTime: string;\r\n  trackingNumber: string;\r\n  status: { id: number; name: string };\r\n  items: {\r\n    item: { id: number; name: string; reference: string; removalThreshold: number };\r\n    quantity: number;\r\n    unit: string;\r\n  }[];\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TransporteService {\r\n  private readonly baseUrl = `${environment.apiUrl}/carriers`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private toTransporte(c: CarrierDto): Transporte {\r\n    const firstItem = c.items?.[0];\r\n\r\n    return {\r\n      id: c.id,\r\n      residuo: firstItem?.item.name ?? 'Desconocido',\r\n      cantidad: firstItem?.quantity ?? 0,\r\n      origen: 'Bodegas EcoConstruct',\r\n      destino: c.destiny,\r\n      patente: c.patent,\r\n      fechaSalida: c.departureTime,\r\n      fechaLlegada: c.arrivalTime,\r\n      transportista: c.carrier,\r\n      conductor: c.driver,\r\n      guia: c.trackingNumber,\r\n      estadoTexto: c.status.name,\r\n      items: c.items ?? []\r\n    };\r\n  }\r\n\r\n  getTransportes(): Observable<Transporte[]> {\r\n    return this.http.get<CarrierDto[]>(this.baseUrl)\r\n      .pipe(map(list => list.map(this.toTransporte)));\r\n  }\r\n\r\n  createTransporte(t: Transporte): Observable<Transporte> {\r\n    const payload = {\r\n      user: { id: 1 },\r\n      status: { id: 1 },\r\n      carrier: t.transportista,\r\n      destiny: t.destino,\r\n      driver: t.conductor,\r\n      patent: t.patente,\r\n      departureTime: t.fechaSalida,\r\n      arrivalTime: t.fechaLlegada,\r\n      trackingNumber: t.guia,\r\n      items: t.items ?? []\r\n    };\r\n\r\n    console.log('Payload enviado al backend (servicio):', payload);\r\n\r\n    return this.http.post<CarrierDto>(this.baseUrl, payload)\r\n      .pipe(map(this.toTransporte));\r\n  }\r\n\r\n  updateTransporte(t: Transporte): Observable<Transporte> {\r\n    const url = `${this.baseUrl}/${t.id}`;\r\n    const payload = {\r\n      user: { id: 1 },\r\n      status: { id: 1 },\r\n      carrier:  t.transportista,\r\n      destiny: t.destino,\r\n      driver: t.conductor,\r\n      patent: t.patente,\r\n      departureTime: t.fechaSalida,\r\n      arrivalTime: t.fechaLlegada,\r\n      trackingNumber: t.guia\r\n    };\r\n    return this.http.put<CarrierDto>(url, payload)\r\n      .pipe(map(this.toTransporte));\r\n  }\r\n\r\n  getResiduos(): Observable<Residuo[]> {\r\n    return this.http.get<Residuo[]>(`${environment.apiUrl}/items`);\r\n  }\r\n\r\n}\r\n","// transporte.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { TransporteService } from './transporte.service';\r\nimport { Transporte }        from './transporte.model';\r\nimport { Residuo } from './residuo.model';\r\n\r\n@Component({\r\n  selector: 'app-transporte',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    DatePipe,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  templateUrl: './transporte.html',\r\n  styleUrls: ['./transporte.css']\r\n})\r\n\r\nexport class TransporteComponent implements OnInit {\r\n  form: FormGroup;\r\n  enCurso: Transporte[] = [];\r\n\r\n  numeroServicio = this.enCurso.length + 1;\r\n  residuos: Residuo[] = [];\r\n  showDetalleModal = false;\r\n  selectedTransport?: Transporte;\r\n  editMode = false;\r\n\r\n  constructor(\r\n    private fb:    FormBuilder,\r\n    private svc:   TransporteService,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) {\r\n  this.form = this.fb.group({\r\n    transportista: ['', Validators.required],\r\n    residuoId: ['', Validators.required],\r\n    obra: ['', Validators.required],\r\n    conductor: ['', [Validators.required, Validators.minLength(3)]],\r\n    patente: ['', [Validators.required, Validators.pattern(/^[A-Z0-9\\-]{4,10}$/)]],\r\n    fechaSalida: ['', Validators.required],\r\n    fechaLlegada: ['', Validators.required],\r\n    guia: ['', Validators.required]\r\n  });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.load();\r\n    this.loadResiduos();\r\n  }\r\n\r\n  private load() {\r\n    this.svc.getTransportes().subscribe({\r\n      next: transports => {\r\n        this.enCurso = transports;\r\n        this.numeroServicio = this.enCurso.length + 1;\r\n      },\r\n      error: () => {\r\n        this.toastr.error('Error cargando transportes', 'Error');\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadResiduos() {\r\n    this.svc.getResiduos().subscribe({\r\n      next: data => this.residuos = data,\r\n      error: () => this.toastr.error('Error cargando residuos')\r\n    });\r\n  }\r\n\r\nregister() {\r\n  if (this.form.invalid) {\r\n    this.toastr.error('Revisa los campos obligatorios', 'Validación');\r\n    this.form.markAllAsTouched();\r\n    return;\r\n  }\r\n\r\n  const payload: any = {\r\n    ...this.form.value,\r\n    cantidad: 0,\r\n    origen: 'Bodegas EcoConstruct',\r\n    destino: this.form.value.obra,\r\n    estadoTexto: 'En tránsito',\r\n    items: [\r\n      {\r\n        item: { id: this.form.value.residuoId },\r\n        quantity: 0,\r\n        unit: 'No especifica'\r\n      }\r\n    ]\r\n  };\r\n\r\n  delete payload.residuoId;\r\n\r\n  console.log('Payload enviado al backend:', payload);\r\n\r\n  this.svc.createTransporte(payload).subscribe({\r\n    next: nuevo => {\r\n      this.enCurso.unshift(nuevo);\r\n      this.numeroServicio = this.enCurso.length + 1;\r\n      this.toastr.success('Transporte registrado', '¡Listo!');\r\n      this.form.reset();\r\n    },\r\n    error: () => {\r\n      this.toastr.error('Error al registrar transporte', 'Error');\r\n    }\r\n  });\r\n}\r\n\r\nopenDetalle(t: Transporte) {\r\n  this.selectedTransport = { ...t };\r\n  console.log('Transporte seleccionado:', this.selectedTransport);\r\n  console.log('Items:', this.selectedTransport.items);\r\n  this.editMode = false;\r\n  this.showDetalleModal = true;\r\n}\r\n  onEdit() {\r\n    this.editMode = true;\r\n    this.form.patchValue({\r\n      transportista: this.selectedTransport!.transportista,\r\n      residuo:       this.selectedTransport!.residuo,\r\n      obra:          this.selectedTransport!.destino,\r\n      conductor:     this.selectedTransport!.conductor,\r\n      patente:       this.selectedTransport!.patente,\r\n      fechaSalida:   this.selectedTransport!.fechaSalida,\r\n      fechaLlegada:  this.selectedTransport!.fechaLlegada,\r\n      guia:          this.selectedTransport!.guia\r\n    });\r\n  }\r\n\r\n  onSave() {\r\n    if (this.form.invalid || !this.selectedTransport) return;\r\n    const updated: Transporte = {\r\n      ...this.selectedTransport,\r\n      ...this.form.value,\r\n      destino: this.form.value.obra\r\n    };\r\n    this.svc.updateTransporte(updated).subscribe({\r\n      next: t => {\r\n        const i = this.enCurso.findIndex(x => x.id === t.id);\r\n        if (i > -1) this.enCurso[i] = t;\r\n        this.toastr.success('Transporte actualizado','¡Listo!');\r\n        this.closeDetalle();\r\n      },\r\n      error: () => this.toastr.error('Error actualizando','Error')\r\n    });\r\n  }\r\n\r\n  getResiduoNombrePorId(id: number): string {\r\n    const res = this.residuos.find(r => r.id === id);\r\n    return res ? res.name : '(Desconocido)';\r\n  }\r\n\r\n  closeDetalle() {\r\n    this.showDetalleModal = false;\r\n    this.editMode = false;\r\n    this.form.reset();\r\n  }\r\n\r\n   logout() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { TransporteComponent } from './transporte';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { of, throwError } from 'rxjs';\r\nimport { Component } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TransporteService } from './transporte.service';\r\nimport { Transporte } from './transporte.model';\r\nimport { Residuo } from './residuo.model';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({ template: '' })\r\nclass DummyComponent {}\r\n\r\ndescribe('TransporteComponent', () => {\r\n  let component: TransporteComponent;\r\n  let fixture: ComponentFixture<TransporteComponent>;\r\n  let mockSvc: jasmine.SpyObj<TransporteService>;\r\n  let mockToastr: jasmine.SpyObj<ToastrService>;\r\n  let router: jasmine.SpyObj<Router>;\r\n\r\n  beforeEach(async () => {\r\n    mockSvc = jasmine.createSpyObj('TransporteService', ['getTransportes', 'getResiduos', 'createTransporte', 'updateTransporte']);\r\n    mockToastr = jasmine.createSpyObj('ToastrService', ['error', 'success']);\r\n    const mockRouter = jasmine.createSpyObj('Router', ['navigate']);\r\n\r\n    mockSvc.getTransportes.and.returnValue(of([]));\r\n    mockSvc.getResiduos.and.returnValue(of([]));\r\n\r\n    await TestBed.configureTestingModule({\r\n      imports: [\r\n        TransporteComponent,\r\n        ReactiveFormsModule,\r\n        CommonModule,\r\n        RouterModule.forRoot([\r\n          { path: 'login', component: DummyComponent }\r\n        ]),\r\n        DummyComponent\r\n      ],\r\n      providers: [\r\n        { provide: TransporteService, useValue: mockSvc },\r\n        { provide: ToastrService, useValue: mockToastr },\r\n        { provide: Router, useValue: mockRouter },\r\n        { provide: ActivatedRoute, useValue: {} }\r\n      ]\r\n    }).compileComponents();\r\n\r\n    router = TestBed.inject(Router) as jasmine.SpyObj<Router>;\r\n\r\n    fixture = TestBed.createComponent(TransporteComponent);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('debería crearse correctamente', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('debería cargar transportes y residuos en ngOnInit', () => {\r\n    const mockTransporte: Transporte[] = [{\r\n      id: 1, residuo: 'Lodo', cantidad: 5, origen: '', destino: '', patente: '',\r\n      fechaSalida: '', fechaLlegada: '', transportista: '', conductor: '',\r\n      guia: '', estadoTexto: '', items: []\r\n    }];\r\n    const mockResiduos: Residuo[] = [{ id: 1, name: 'Metal' }];\r\n\r\n    mockSvc.getTransportes.and.returnValue(of(mockTransporte));\r\n    mockSvc.getResiduos.and.returnValue(of(mockResiduos));\r\n\r\n    component.ngOnInit();\r\n\r\n    expect(component.enCurso.length).toBe(1);\r\n    expect(component.residuos.length).toBe(1);\r\n    expect(mockSvc.getTransportes).toHaveBeenCalled();\r\n    expect(mockSvc.getResiduos).toHaveBeenCalled();\r\n  });\r\n\r\n  it('debería mostrar error si falla carga de transportes', () => {\r\n    mockSvc.getTransportes.and.returnValue(throwError(() => new Error('error')));\r\n    mockSvc.getResiduos.and.returnValue(of([]));\r\n\r\n    component.ngOnInit();\r\n\r\n    expect(mockToastr.error).toHaveBeenCalledWith('Error cargando transportes', 'Error');\r\n  });\r\n\r\n  it('debería registrar transporte correctamente', () => {\r\n    mockSvc.createTransporte.and.returnValue(of({\r\n      id: 1, residuo: 'Lodo', cantidad: 0, origen: '', destino: '', patente: '',\r\n      fechaSalida: '', fechaLlegada: '', transportista: '', conductor: '',\r\n      guia: '', estadoTexto: '', items: []\r\n    }));\r\n\r\n    component.form.setValue({\r\n      transportista: 'Juan',\r\n      residuoId: 1,\r\n      obra: 'Obra A',\r\n      conductor: 'Pedro',\r\n      patente: 'AAA-1234',\r\n      fechaSalida: '2025-07-14T12:00',\r\n      fechaLlegada: '2025-07-14T14:00',\r\n      guia: '123'\r\n    });\r\n\r\n    component.register();\r\n\r\n    expect(mockSvc.createTransporte).toHaveBeenCalled();\r\n    expect(mockToastr.success).toHaveBeenCalledWith('Transporte registrado', '¡Listo!');\r\n  });\r\n\r\n  it('no debería registrar si el formulario es inválido', () => {\r\n    component.form.markAllAsTouched();\r\n    component.register();\r\n\r\n    expect(mockToastr.error).toHaveBeenCalledWith('Revisa los campos obligatorios', 'Validación');\r\n    expect(mockSvc.createTransporte).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('debería abrir el modal de detalle correctamente', () => {\r\n    const transporte: Transporte = {\r\n      id: 1, residuo: 'Metal', cantidad: 3, origen: 'Obra A', destino: 'Relleno',\r\n      patente: 'XYZ-9999', fechaSalida: '2025-07-14T08:00', fechaLlegada: '2025-07-14T09:00',\r\n      transportista: 'Carlos', conductor: 'Juan', guia: '456', estadoTexto: 'En tránsito',\r\n      items: [{ item: { id: 1 }, quantity: 3, unit: 'm3' }]\r\n    };\r\n\r\n    component.openDetalle(transporte);\r\n\r\n    expect(component.selectedTransport).toEqual(transporte);\r\n    expect(component.showDetalleModal).toBeTrue();\r\n    expect(component.editMode).toBeFalse();\r\n  });\r\n\r\n  it('debería cerrar el modal y resetear el formulario', () => {\r\n    component.showDetalleModal = true;\r\n    component.editMode = true;\r\n    component.form.patchValue({ transportista: 'A' });\r\n\r\n    component.closeDetalle();\r\n\r\n    expect(component.showDetalleModal).toBeFalse();\r\n    expect(component.editMode).toBeFalse();\r\n    expect(component.form.value.transportista).toBeNull();\r\n  });\r\n\r\n  it('logout debería limpiar storage y navegar al login', () => {\r\n    spyOn(localStorage, 'clear');\r\n    spyOn(sessionStorage, 'clear');\r\n    spyOn(router, 'navigate');\r\n\r\n    component.logout();\r\n\r\n    expect(localStorage.clear).toHaveBeenCalled();\r\n    expect(sessionStorage.clear).toHaveBeenCalled();\r\n    expect(router.navigate).toHaveBeenCalledWith(['/login']);\r\n  });\r\n\r\n  it('debería devolver nombre de residuo por ID', () => {\r\n    component.residuos = [{ id: 1, name: 'Papel' }];\r\n    const name = component.getResiduoNombrePorId(1);\r\n    expect(name).toBe('Papel');\r\n  });\r\n\r\n  it('debería devolver \"(Desconocido)\" si no encuentra el residuo', () => {\r\n    component.residuos = [];\r\n    const name = component.getResiduoNombrePorId(999);\r\n    expect(name).toBe('(Desconocido)');\r\n  });\r\n});\r\n"],"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","names":["transporte_default","init_transporte","AnimationMetadataType","animation","state","TransporteService","TransporteComponent","init_transporte"],"x_google_ignoreList":[2,3,4]}