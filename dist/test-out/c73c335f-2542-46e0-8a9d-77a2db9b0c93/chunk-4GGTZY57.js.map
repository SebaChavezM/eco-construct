{"version":3,"sources":["node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.mjs"],"sourcesContent":["/*! @azure/msal-browser v4.14.0 2025-07-01 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass BrowserPerformanceMeasurement {\r\n    constructor(name, correlationId) {\r\n        this.correlationId = correlationId;\r\n        this.measureName = BrowserPerformanceMeasurement.makeMeasureName(name, correlationId);\r\n        this.startMark = BrowserPerformanceMeasurement.makeStartMark(name, correlationId);\r\n        this.endMark = BrowserPerformanceMeasurement.makeEndMark(name, correlationId);\r\n    }\r\n    static makeMeasureName(name, correlationId) {\r\n        return `msal.measure.${name}.${correlationId}`;\r\n    }\r\n    static makeStartMark(name, correlationId) {\r\n        return `msal.start.${name}.${correlationId}`;\r\n    }\r\n    static makeEndMark(name, correlationId) {\r\n        return `msal.end.${name}.${correlationId}`;\r\n    }\r\n    static supportsBrowserPerformance() {\r\n        return (typeof window !== \"undefined\" &&\r\n            typeof window.performance !== \"undefined\" &&\r\n            typeof window.performance.mark === \"function\" &&\r\n            typeof window.performance.measure === \"function\" &&\r\n            typeof window.performance.clearMarks === \"function\" &&\r\n            typeof window.performance.clearMeasures === \"function\" &&\r\n            typeof window.performance.getEntriesByName === \"function\");\r\n    }\r\n    /**\r\n     * Flush browser marks and measurements.\r\n     * @param {string} correlationId\r\n     * @param {SubMeasurement} measurements\r\n     */\r\n    static flushMeasurements(correlationId, measurements) {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                measurements.forEach((measurement) => {\r\n                    const measureName = BrowserPerformanceMeasurement.makeMeasureName(measurement.name, correlationId);\r\n                    const entriesForMeasurement = window.performance.getEntriesByName(measureName, \"measure\");\r\n                    if (entriesForMeasurement.length > 0) {\r\n                        window.performance.clearMeasures(measureName);\r\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeStartMark(measureName, correlationId));\r\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeEndMark(measureName, correlationId));\r\n                    }\r\n                });\r\n            }\r\n            catch (e) {\r\n                // Silently catch and return null\r\n            }\r\n        }\r\n    }\r\n    startMeasurement() {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                window.performance.mark(this.startMark);\r\n            }\r\n            catch (e) {\r\n                // Silently catch\r\n            }\r\n        }\r\n    }\r\n    endMeasurement() {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                window.performance.mark(this.endMark);\r\n                window.performance.measure(this.measureName, this.startMark, this.endMark);\r\n            }\r\n            catch (e) {\r\n                // Silently catch\r\n            }\r\n        }\r\n    }\r\n    flushMeasurement() {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                const entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\r\n                if (entriesForMeasurement.length > 0) {\r\n                    const durationMs = entriesForMeasurement[0].duration;\r\n                    window.performance.clearMeasures(this.measureName);\r\n                    window.performance.clearMarks(this.startMark);\r\n                    window.performance.clearMarks(this.endMark);\r\n                    return durationMs;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Silently catch and return null\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\n\nexport { BrowserPerformanceMeasurement };\n\n"],"mappings":";;;;;AAAA,IAMM;AANN;AAAA;AAMA,IAAM,gCAAN,MAAM,+BAA8B;AAAA,MAChC,YAAY,MAAM,eAAe;AAC7B,aAAK,gBAAgB;AACrB,aAAK,cAAc,+BAA8B,gBAAgB,MAAM,aAAa;AACpF,aAAK,YAAY,+BAA8B,cAAc,MAAM,aAAa;AAChF,aAAK,UAAU,+BAA8B,YAAY,MAAM,aAAa;AAAA,MAChF;AAAA,MACA,OAAO,gBAAgB,MAAM,eAAe;AACxC,eAAO,gBAAgB,IAAI,IAAI,aAAa;AAAA,MAChD;AAAA,MACA,OAAO,cAAc,MAAM,eAAe;AACtC,eAAO,cAAc,IAAI,IAAI,aAAa;AAAA,MAC9C;AAAA,MACA,OAAO,YAAY,MAAM,eAAe;AACpC,eAAO,YAAY,IAAI,IAAI,aAAa;AAAA,MAC5C;AAAA,MACA,OAAO,6BAA6B;AAChC,eAAQ,OAAO,WAAW,eACtB,OAAO,OAAO,gBAAgB,eAC9B,OAAO,OAAO,YAAY,SAAS,cACnC,OAAO,OAAO,YAAY,YAAY,cACtC,OAAO,OAAO,YAAY,eAAe,cACzC,OAAO,OAAO,YAAY,kBAAkB,cAC5C,OAAO,OAAO,YAAY,qBAAqB;AAAA,MACvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,OAAO,kBAAkB,eAAe,cAAc;AAClD,YAAI,+BAA8B,2BAA2B,GAAG;AAC5D,cAAI;AACA,yBAAa,QAAQ,CAAC,gBAAgB;AAClC,oBAAM,cAAc,+BAA8B,gBAAgB,YAAY,MAAM,aAAa;AACjG,oBAAM,wBAAwB,OAAO,YAAY,iBAAiB,aAAa,SAAS;AACxF,kBAAI,sBAAsB,SAAS,GAAG;AAClC,uBAAO,YAAY,cAAc,WAAW;AAC5C,uBAAO,YAAY,WAAW,+BAA8B,cAAc,aAAa,aAAa,CAAC;AACrG,uBAAO,YAAY,WAAW,+BAA8B,YAAY,aAAa,aAAa,CAAC;AAAA,cACvG;AAAA,YACJ,CAAC;AAAA,UACL,SACO,GAAG;AAAA,UAEV;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,mBAAmB;AACf,YAAI,+BAA8B,2BAA2B,GAAG;AAC5D,cAAI;AACA,mBAAO,YAAY,KAAK,KAAK,SAAS;AAAA,UAC1C,SACO,GAAG;AAAA,UAEV;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,iBAAiB;AACb,YAAI,+BAA8B,2BAA2B,GAAG;AAC5D,cAAI;AACA,mBAAO,YAAY,KAAK,KAAK,OAAO;AACpC,mBAAO,YAAY,QAAQ,KAAK,aAAa,KAAK,WAAW,KAAK,OAAO;AAAA,UAC7E,SACO,GAAG;AAAA,UAEV;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,mBAAmB;AACf,YAAI,+BAA8B,2BAA2B,GAAG;AAC5D,cAAI;AACA,kBAAM,wBAAwB,OAAO,YAAY,iBAAiB,KAAK,aAAa,SAAS;AAC7F,gBAAI,sBAAsB,SAAS,GAAG;AAClC,oBAAM,aAAa,sBAAsB,CAAC,EAAE;AAC5C,qBAAO,YAAY,cAAc,KAAK,WAAW;AACjD,qBAAO,YAAY,WAAW,KAAK,SAAS;AAC5C,qBAAO,YAAY,WAAW,KAAK,OAAO;AAC1C,qBAAO;AAAA,YACX;AAAA,UACJ,SACO,GAAG;AAAA,UAEV;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;","names":[],"x_google_ignoreList":[0]}