{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\pages\\inventario\\inventario.html", "angular:jit:style:src\\app\\pages\\inventario\\inventario.css", "src/app/pages/inventario/inventory.service.ts", "src/app/pages/inventario/inventario.ts", "src/app/pages/inventario/inventario.spec.ts"],
  "sourcesContent": ["<div class=\"d-flex vh-100 overflow-hidden\">\r\n\r\n  <aside class=\"sidebar text-white flex-shrink-0 p-3\" style=\"width:240px\">\r\n  <div class=\"d-flex align-items-center mb-4\">\r\n    <i class=\"bi bi-leaf-fill fs-4 me-2\"></i>\r\n    <span class=\"h5 mb-0\">EcoConstruct</span>\r\n  </div>\r\n\r\n  <nav class=\"nav flex-column\">\r\n\r\n    <small class=\"text-uppercase text-white-50 mb-2\">Principal</small>\r\n\r\n    <a\r\n      routerLink=\"/dashboard\"\r\n      routerLinkActive=\"active\"\r\n      [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-speedometer2 me-2\"></i>\r\n      Dashboard\r\n    </a>\r\n\r\n    <a\r\n      routerLink=\"/gestion-obras\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-building me-2\"></i>\r\n      Gesti\u00F3n de Obras\r\n    </a>\r\n\r\n    <a\r\n      routerLink=\"/registro-residuos\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-card-checklist me-2\"></i>\r\n      Registro de Residuos\r\n    </a>\r\n\r\n    <a\r\n      routerLink=\"/transporte\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-truck me-2\"></i>\r\n      Transporte\r\n    </a>\r\n\r\n    <a\r\n      routerLink=\"/inventario\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-box-seam me-2\"></i>\r\n      Inventario\r\n    </a>\r\n\r\n    <a\r\n      routerLink=\"/historial-trazabilidad\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-clock-history me-2\"></i>\r\n      Historial y Trazabilidad\r\n    </a>\r\n\r\n    <a\r\n      routerLink=\"/reportes\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-bar-chart me-2\"></i>\r\n      Reportes\r\n    </a>\r\n\r\n    <hr class=\"border-light\">\r\n\r\n    <small class=\"text-uppercase text-white-50 mb-2\">Sistema</small>\r\n    <a\r\n      routerLink=\"/perfil\"\r\n      routerLinkActive=\"active\"\r\n      class=\"nav-link text-white\"\r\n    >\r\n      <i class=\"bi bi-person-circle me-2\"></i>\r\n      Perfil\r\n    </a>\r\n          <a routerLink=\"/usuarios\"\r\n         routerLinkActive=\"active\"\r\n         class=\"nav-link text-white mt-2\">\r\n        <i class=\"bi bi-people me-2\"></i>Usuarios\r\n    </a>\r\n    <a\r\n      href=\"#\"\r\n      (click)=\"logout()\"\r\n      class=\"nav-link text-white mt-2\"\r\n    >\r\n      <i class=\"bi bi-box-arrow-right me-2\"></i>\r\n      Cerrar Sesi\u00F3n\r\n    </a>\r\n  </nav>\r\n</aside>\r\n\r\n  <!-- Contenido principal -->\r\n  <main class=\"contenido flex-grow-1 overflow-auto\">\r\n    <h2>Inventario de Residuos</h2>\r\n    <p class=\"subtitulo\">Listado de residuos recolectados</p>\r\n\r\n    <!-- Inventario -->\r\n    <div class=\"caja\">\r\n      <h3>Inventario</h3>\r\n      <table class=\"tabla-inventario\">\r\n        <thead>\r\n          <tr>\r\n            <th>Obra</th>\r\n            <th>Cantidad</th>\r\n            <th>Tipo</th>\r\n            <th>Estado</th>\r\n            <th>Valor</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of inventarioAgrupado\">\r\n            <td>{{ item.nombre }}</td>\r\n            <td>{{ item.cantidad }}</td>\r\n            <td>{{ item.unidad }}</td>\r\n            <td>Usado</td>\r\n            <td>$</td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- Materiales Reciclados -->\r\n    <div class=\"caja\">\r\n      <h3>Materiales Reciclados</h3>\r\n      <table class=\"tabla-inventario\">\r\n        <thead>\r\n          <tr>\r\n            <th>Material</th>\r\n            <th>Cantidad</th>\r\n            <th>Estado</th>\r\n            <th>Calidad</th>\r\n            <th>Valor</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td><strong>Concreto Reciclado</strong></td>\r\n            <td>12.3 m\u00B3</td>\r\n            <td><span class=\"estado estado-disponible\">Disponible</span></td>\r\n            <td>Grado A</td>\r\n            <td class=\"valor\">$1.800</td>\r\n          </tr>\r\n          <tr>\r\n            <td><strong>Acero Recuperado</strong></td>\r\n            <td>2.5 Ton</td>\r\n            <td><span class=\"estado estado-vendido\">Vendido</span></td>\r\n            <td>Grado B</td>\r\n            <td class=\"valor\">$3.200</td>\r\n          </tr>\r\n          <tr>\r\n            <td><strong>Madera Tratada</strong></td>\r\n            <td>5.7 m\u00B3</td>\r\n            <td><span class=\"estado estado-disponible\">Disponible</span></td>\r\n            <td>Grado A</td>\r\n            <td class=\"valor\">$950</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </main>\r\n</div>\r\n", "/* src/app/pages/inventario/inventario.css */\n.sidebar {\n  width: 240px;\n  background-color: #16a249;\n  color: white;\n  padding: 2rem 1rem;\n  display: flex;\n  flex-direction: column;\n}\n.logo-icon {\n  font-size: 1.5rem;\n}\n.brand {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 2rem;\n}\n.brand-name {\n  font-weight: 700;\n  font-size: 1.2rem;\n}\n.nav-section {\n  flex: 1;\n}\n.nav-section-title {\n  text-transform: uppercase;\n  font-size: 0.75rem;\n  opacity: 0.7;\n  margin: 1rem 0 0.5rem;\n}\n.nav-link {\n  color: white;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.25rem 0;\n  text-decoration: none;\n  transition: opacity .2s;\n}\n.nav-link.active,\n.nav-link:hover {\n  opacity: 0.8;\n}\n.obra-card {\n  border-radius: .75rem;\n}\n.obra-card h5 {\n  font-weight: 600;\n}\n.obra-card .badge {\n  font-size: .75rem;\n  text-transform: none;\n  padding: .4em .8em;\n}\n.progress {\n  background-color: #e9ecef;\n}\n.progress-bar {\n  transition: width .6s ease;\n}\n.upload-dropzone {\n  border: 2px dashed #ced4da;\n  border-radius: .5rem;\n  padding: 2rem;\n  text-align: center;\n  cursor: pointer;\n  color: #6c757d;\n}\n.upload-dropzone:hover {\n  background-color: #f8f9fa;\n}\n.nav-link.active {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.snack-success {\n  background-color: #4caf50 !important;\n  color: #fff !important;\n}\n.snack-error {\n  background-color: #f44336 !important;\n  color: #fff !important;\n}\n.contenido {\n  padding: 2rem;\n}\n.caja {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 12px;\n  padding: 1.5rem;\n  margin-bottom: 2rem;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\n}\n.tabla-inventario {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n}\n.tabla-inventario th,\n.tabla-inventario td {\n  padding: 0.75rem 1rem;\n  border-bottom: 1px solid #e5e7eb;\n  text-align: left;\n}\n.tabla-inventario thead {\n  background-color: #f9fafb;\n}\n.estado {\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: 0.875rem;\n  font-weight: 500;\n  display: inline-block;\n}\n.estado-procesado {\n  background-color: #d1fae5;\n  color: #065f46;\n}\n.estado-stock {\n  background-color: #e0f2fe;\n  color: #0369a1;\n}\n.estado-vendido {\n  background-color: #f3e8ff;\n  color: #6b21a8;\n}\n.estado-disponible {\n  background-color: #e0f2fe;\n  color: #0369a1;\n}\n.valor {\n  color: #16a34a;\n  font-weight: 600;\n}\n/*# sourceMappingURL=inventario.css.map */\n", "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Inventory } from './inventory.model';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InventoryService {\r\n  private readonly baseUrl = `${environment.apiUrl}/inventories`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll(): Observable<Inventory[]> {\r\n    return this.http.get<Inventory[]>(this.baseUrl);\r\n  }\r\n\r\n  getById(id: number): Observable<Inventory> {\r\n    return this.http.get<Inventory>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  create(inventory: Inventory): Observable<Inventory> {\r\n    return this.http.post<Inventory>(this.baseUrl, inventory);\r\n  }\r\n\r\n  update(id: number, inventory: Inventory): Observable<Inventory> {\r\n    return this.http.put<Inventory>(`${this.baseUrl}/${id}`, inventory);\r\n  }\r\n\r\n  updateStatus(id: number, statusId: number): Observable<Inventory> {\r\n    return this.http.patch<Inventory>(`${this.baseUrl}/${id}/status/${statusId}`, {});\r\n  }\r\n\r\n  delete(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\r\n  }\r\n}\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { InventoryService } from './inventory.service';\r\n\r\n@Component({\r\n  selector: 'app-inventario',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './inventario.html',\r\n  styleUrls: ['./inventario.css']\r\n})\r\nexport class InventarioComponent implements OnInit {\r\n  inventarioOriginal: any[] = [];\r\n  inventarioAgrupado: { nombre: string, cantidad: number, unidad: string }[] = [];\r\n\r\n  constructor(private inventoryService: InventoryService, private router: Router) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.inventoryService.getAll().subscribe((data) => {\r\n      this.inventarioOriginal = data;\r\n      this.inventarioAgrupado = this.agruparInventario(data);\r\n    });\r\n  }\r\n\r\n  agruparInventario(data: any[]): { nombre: string; cantidad: number; unidad: string }[] {\r\n    const agrupado: { [nombre: string]: { cantidad: number, unidad: string } } = {};\r\n\r\n    for (const registro of data) {\r\n      for (const item of registro.items || []) {\r\n        const nombre = item.item.name;\r\n        const cantidad = item.quantity;\r\n        const unidad = item.unit;\r\n\r\n        if (!agrupado[nombre]) {\r\n          agrupado[nombre] = { cantidad: 0, unidad };\r\n        }\r\n\r\n        agrupado[nombre].cantidad += cantidad;\r\n      }\r\n    }\r\n\r\n    return Object.entries(agrupado).map(([nombre, datos]) => ({\r\n      nombre,\r\n      cantidad: datos.cantidad,\r\n      unidad: datos.unidad\r\n    }));\r\n  }\r\n\r\n  getFecha(fecha: string): string {\r\n    const date = new Date(fecha);\r\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n  }\r\n\r\n  getEstadoClass(estado: string): string {\r\n    switch (estado.toLowerCase()) {\r\n      case 'procesado':\r\n        return 'estado estado-procesado';\r\n      case 'en stock':\r\n        return 'estado estado-stock';\r\n      case 'vendido':\r\n        return 'estado estado-vendido';\r\n      default:\r\n        return 'estado';\r\n    }\r\n  }\r\n\r\n  getValorEstimado(valor: number): string {\r\n    return `$${valor.toLocaleString('en-US')}`;\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n", "import { ComponentFixture, TestBed, fakeAsync, tick } from '@angular/core/testing';\r\nimport { InventarioComponent } from './inventario';\r\nimport { Router } from '@angular/router';\r\nimport { of } from 'rxjs';\r\nimport { InventoryService } from './inventory.service';\r\n\r\ndescribe('InventarioComponent', () => {\r\n  let component: InventarioComponent;\r\n  let fixture: ComponentFixture<InventarioComponent>;\r\n  let mockInventoryService: jasmine.SpyObj<InventoryService>;\r\n  let mockRouter: jasmine.SpyObj<Router>;\r\n\r\n  const mockData = [\r\n    {\r\n      id: 1,\r\n      workSite: { id: 1, name: 'Obra 1' },\r\n      carrier: { id: 1, name: 'Transportista 1' },\r\n      inventoryStatus: { id: 1, name: 'Procesado' },\r\n      createdAt: '2024-07-01T00:00:00Z',\r\n      items: [\r\n        { item: { id: 1, name: 'Ladrillos' }, quantity: 100, unit: 'unidades' },\r\n        { item: { id: 2, name: 'Cemento' }, quantity: 50, unit: 'kg' },\r\n        { item: { id: 1, name: 'Ladrillos' }, quantity: 25, unit: 'unidades' }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      workSite: { id: 2, name: 'Obra 2' },\r\n      carrier: { id: 2, name: 'Transportista 2' },\r\n      inventoryStatus: { id: 2, name: 'En stock' },\r\n      createdAt: '2024-07-02T00:00:00Z',\r\n      items: [\r\n        { item: { id: 3, name: 'Arena' }, quantity: 70, unit: 'kg' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  beforeEach(async () => {\r\n    mockInventoryService = jasmine.createSpyObj('InventoryService', ['getAll']);\r\n    mockRouter = jasmine.createSpyObj('Router', ['navigate']);\r\n\r\n    await TestBed.configureTestingModule({\r\n      imports: [InventarioComponent],\r\n      providers: [\r\n        { provide: InventoryService, useValue: mockInventoryService },\r\n        { provide: Router, useValue: mockRouter }\r\n      ]\r\n    }).compileComponents();\r\n\r\n    fixture = TestBed.createComponent(InventarioComponent);\r\n    component = fixture.componentInstance;\r\n  });\r\n\r\n  it('debería crearse correctamente', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('debería cargar y agrupar inventario al inicializar', fakeAsync(() => {\r\n    mockInventoryService.getAll.and.returnValue(of(mockData));\r\n    fixture.detectChanges();\r\n    tick();\r\n\r\n    expect(component.inventarioOriginal.length).toBe(2);\r\n    expect(component.inventarioAgrupado.length).toBe(3);\r\n\r\n    const ladrillos = component.inventarioAgrupado.find(i => i.nombre === 'Ladrillos');\r\n    expect(ladrillos?.cantidad).toBe(125);\r\n    expect(ladrillos?.unidad).toBe('unidades');\r\n  }));\r\n\r\n  it('debería formatear correctamente la fecha', () => {\r\n    const formatted = component.getFecha('2024-07-01T00:00:00Z');\r\n    expect(formatted).toBe('1/7/2024');\r\n  });\r\n\r\n  it('debería devolver clases CSS según estado', () => {\r\n    expect(component.getEstadoClass('Procesado')).toBe('estado estado-procesado');\r\n    expect(component.getEstadoClass('En Stock')).toBe('estado estado-stock');\r\n    expect(component.getEstadoClass('Vendido')).toBe('estado estado-vendido');\r\n    expect(component.getEstadoClass('Otro')).toBe('estado');\r\n  });\r\n\r\n  it('debería formatear valor estimado correctamente', () => {\r\n    const valor = component.getValorEstimado(123456);\r\n    expect(valor).toBe('$123,456');\r\n  });\r\n\r\n  it('logout debería limpiar storage y navegar a login', () => {\r\n    spyOn(localStorage, 'clear');\r\n    spyOn(sessionStorage, 'clear');\r\n\r\n    component.logout();\r\n\r\n    expect(localStorage.clear).toHaveBeenCalled();\r\n    expect(sessionStorage.clear).toHaveBeenCalled();\r\n    expect(mockRouter.navigate).toHaveBeenCalledWith(['/login']);\r\n  });\r\n});\r\n"],
  "mappings": "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",
  "names": ["inventario_default", "init_inventario", "InventoryService", "InventarioComponent", "init_inventario"]
}
