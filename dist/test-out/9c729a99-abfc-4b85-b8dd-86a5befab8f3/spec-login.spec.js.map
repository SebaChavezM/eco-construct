{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\pages\\login\\login.html", "angular:jit:style:src\\app\\pages\\login\\login.css", "src/app/pages/login/login.ts", "src/app/pages/login/login.spec.ts"],
  "sourcesContent": ["<div class=\"login-container\">\r\n  <!-- Lado izquierdo -->\r\n  <div class=\"left-side\">\r\n    <div class=\"brand-content\">\r\n      <div class=\"logo-container\">\r\n        <div class=\"logo-icon\">\r\n          <i class=\"bi bi-leaf-fill\" style=\"font-size: 1.5rem; color: white;\"></i>\r\n        </div>\r\n        <span class=\"brand-name\">EcoConstruct</span>\r\n      </div>\r\n      <h1 class=\"brand-title\">\r\n        Gesti\u00F3n Inteligente<br>\r\n        de Residuos\r\n      </h1>\r\n      <p class=\"brand-subtitle\">Construyendo un futuro sostenible</p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Lado derecho -->\r\n  <div class=\"right-side\">\r\n    <div class=\"form-container\">\r\n      <div class=\"form-header text-center mb-4\">\r\n        <h2 class=\"fw-light\">Iniciar sesi\u00F3n</h2>\r\n        <p class=\"text-muted\">Confirma tus datos para acceder</p>\r\n      </div>\r\n\r\n      <form (submit)=\"onSubmit($event)\">\r\n        <div class=\"alert alert-danger py-2\" *ngIf=\"showError\">\r\n          Credenciales incorrectas. Intenta con adminecoconstruct.com / admin123\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"email\" class=\"form-label\">Email</label>\r\n          <input id=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" placeholder=\"usuario@ecoconstruct.com\" required>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"password\" class=\"form-label\">Contrase\u00F1a</label>\r\n          <div class=\"input-group\">\r\n            <input id=\"password\" [type]=\"showPassword ? 'text' : 'password'\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Contrase\u00F1a\" required>\r\n            <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"togglePassword()\">\r\n              <i class=\"bi\" [ngClass]=\"showPassword ? 'bi-eye-slash' : 'bi-eye'\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"remember\">\r\n            <label class=\"form-check-label\" for=\"remember\">Recordarme</label>\r\n          </div>\r\n          <button type=\"button\" class=\"btn btn-link p-0 text-success\">\u00BFOlvidaste tu contrase\u00F1a?</button>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-success w-100\">CONTINUAR</button>\r\n      </form>\r\n\r\n        <div class=\"divider\">O CONTIN\u00DAA CON</div>\r\n\r\n        <button type=\"button\" class=\"btn btn-outline-secondary w-100 mb-3 d-flex align-items-center justify-content-center gap-2\">\r\n          <img src=\"https://www.svgrepo.com/show/475656/google-color.svg\" width=\"20\" height=\"20\">\r\n          Google\r\n        </button>\r\n        <button (click)=\"login()\" type=\"button\" class=\"btn btn-outline-secondary w-100 mb-3 d-flex align-items-center justify-content-center gap-2\">\r\n          <img src=\"https://www.svgrepo.com/show/452062/microsoft.svg\" width=\"20\" height=\"20\">\r\n          Microsoft\r\n        </button>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n", "/* src/app/pages/login/login.css */\n.login-container {\n  display: flex;\n  min-height: 100vh;\n  overflow: hidden;\n}\n.left-side {\n  display: none;\n  width: 50%;\n  position: relative;\n  background:\n    linear-gradient(\n      135deg,\n      #34d399 0%,\n      #14b8a6 35%,\n      #06b6d4 100%);\n  color: white;\n  padding: 4rem 3rem;\n  flex-direction: column;\n  justify-content: center;\n}\n.left-side .logo-container {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 2rem;\n}\n.left-side .logo-icon {\n  width: 48px;\n  height: 48px;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.left-side .brand-name {\n  font-size: 1.5rem;\n  font-weight: 700;\n}\n.brand-title {\n  font-size: 2.25rem;\n  font-weight: 300;\n  margin-bottom: 0.5rem;\n}\n.brand-subtitle {\n  color: rgba(255, 255, 255, 0.9);\n  font-size: 1.125rem;\n  font-weight: 300;\n}\n.right-side {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem;\n}\n.form-container {\n  width: 100%;\n  max-width: 440px;\n  padding: 1rem;\n}\n.form-header h2 {\n  font-weight: 300;\n  font-size: 1.8rem;\n}\n.form-header p {\n  color: #6b7280;\n}\n.divider {\n  display: flex;\n  align-items: center;\n  text-align: center;\n  margin: 1.5rem 0;\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n.divider::before,\n.divider::after {\n  content: \"\";\n  flex: 1;\n  height: 1px;\n  background: #d1d5db;\n  margin: 0 0.75rem;\n}\n.demo-credentials {\n  background-color: #ecfdf5;\n  border: 1px solid #a7f3d0;\n  border-radius: 8px;\n  padding: 1rem;\n  font-size: 0.875rem;\n}\n.demo-credentials p {\n  margin: 0;\n}\n.demo-credentials .demo-title {\n  font-weight: 600;\n  color: #065f46;\n  margin-bottom: 0.5rem;\n}\n.demo-info {\n  color: #047857;\n}\n@media (min-width: 1024px) {\n  .left-side {\n    display: flex;\n  }\n}\nbutton:focus,\ninput:focus,\n.form-control:focus {\n  box-shadow: none !important;\n  outline: none !important;\n}\n/*# sourceMappingURL=login.css.map */\n", "import { Component } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './login.html',\r\n  styleUrls: ['./login.css']\r\n})\r\nexport class LoginComponent {\r\n  email = '';\r\n  password = '';\r\n  showError = false;\r\n  showPassword = false;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  onSubmit(event: Event) {\r\n    event.preventDefault();\r\n    if (this.email === 'admin@ecoconstruct.com' && this.password === 'admin123') {\r\n      this.router.navigate(['/dashboard']);\r\n    } else {\r\n      this.showError = true;\r\n    }\r\n  }\r\n\r\n  togglePassword() {\r\n    this.showPassword = !this.showPassword;\r\n  }\r\n\r\n  login() {\r\n    this.router.navigate(['/dashboard']);\r\n  }\r\n}\r\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { LoginComponent } from './login';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\n\r\ndescribe('LoginComponent', () => {\r\n  let component: LoginComponent;\r\n  let fixture: ComponentFixture<LoginComponent>;\r\n  let mockRouter: jasmine.SpyObj<Router>;\r\n\r\n  beforeEach(async () => {\r\n    mockRouter = jasmine.createSpyObj('Router', ['navigate']);\r\n\r\n    await TestBed.configureTestingModule({\r\n      imports: [LoginComponent, FormsModule, CommonModule],\r\n      providers: [{ provide: Router, useValue: mockRouter }]\r\n    }).compileComponents();\r\n\r\n    fixture = TestBed.createComponent(LoginComponent);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('debería crearse correctamente', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('debería navegar al dashboard con credenciales válidas', () => {\r\n    component.email = 'admin@ecoconstruct.com';\r\n    component.password = 'admin123';\r\n\r\n    const fakeEvent = { preventDefault: () => {} } as Event;\r\n    spyOn(fakeEvent, 'preventDefault');\r\n\r\n    component.onSubmit(fakeEvent);\r\n\r\n    expect(fakeEvent.preventDefault).toHaveBeenCalled();\r\n    expect(mockRouter.navigate).toHaveBeenCalledWith(['/dashboard']);\r\n    expect(component.showError).toBeFalse();\r\n  });\r\n\r\n  it('debería mostrar error con credenciales inválidas', () => {\r\n    component.email = 'user@demo.com';\r\n    component.password = 'wrongpass';\r\n\r\n    const fakeEvent = { preventDefault: () => {} } as Event;\r\n    spyOn(fakeEvent, 'preventDefault');\r\n\r\n    component.onSubmit(fakeEvent);\r\n\r\n    expect(fakeEvent.preventDefault).toHaveBeenCalled();\r\n    expect(mockRouter.navigate).not.toHaveBeenCalled();\r\n    expect(component.showError).toBeTrue();\r\n  });\r\n\r\n  it('togglePassword debería alternar visibilidad', () => {\r\n    expect(component.showPassword).toBeFalse();\r\n    component.togglePassword();\r\n    expect(component.showPassword).toBeTrue();\r\n    component.togglePassword();\r\n    expect(component.showPassword).toBeFalse();\r\n  });\r\n\r\n  it('login() debería navegar al dashboard', () => {\r\n    component.login();\r\n    expect(mockRouter.navigate).toHaveBeenCalledWith(['/dashboard']);\r\n  });\r\n});\r\n"],
  "mappings": "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",
  "names": ["login_default", "init_login", "LoginComponent", "init_login"]
}
